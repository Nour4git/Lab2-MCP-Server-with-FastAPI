import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type WorkspacesSetFeatureFlagsMutationVariables = {
    request: shared.WorkspaceFeatureFlagRequest;
    options?: RequestOptions;
};
export type WorkspacesSetFeatureFlagsMutationData = shared.WorkspaceFeatureFlagResponse;
/**
 * Set workspace feature flags
 */
export declare function useWorkspacesSetFeatureFlagsMutation(options?: MutationHookOptions<WorkspacesSetFeatureFlagsMutationData, Error, WorkspacesSetFeatureFlagsMutationVariables>): UseMutationResult<WorkspacesSetFeatureFlagsMutationData, Error, WorkspacesSetFeatureFlagsMutationVariables>;
export declare function mutationKeyWorkspacesSetFeatureFlags(): MutationKey;
export declare function buildWorkspacesSetFeatureFlagsMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: WorkspacesSetFeatureFlagsMutationVariables) => Promise<WorkspacesSetFeatureFlagsMutationData>;
};
//# sourceMappingURL=workspacesSetFeatureFlags.d.ts.map
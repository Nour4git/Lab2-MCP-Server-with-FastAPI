import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type WorkspacesUpdateSettingsMutationVariables = {
    request: operations.UpdateWorkspaceSettingsRequest;
    options?: RequestOptions;
};
export type WorkspacesUpdateSettingsMutationData = void;
/**
 * Update workspace settings
 *
 * @remarks
 * Update settings about a particular workspace.
 */
export declare function useWorkspacesUpdateSettingsMutation(options?: MutationHookOptions<WorkspacesUpdateSettingsMutationData, Error, WorkspacesUpdateSettingsMutationVariables>): UseMutationResult<WorkspacesUpdateSettingsMutationData, Error, WorkspacesUpdateSettingsMutationVariables>;
export declare function mutationKeyWorkspacesUpdateSettings(): MutationKey;
export declare function buildWorkspacesUpdateSettingsMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: WorkspacesUpdateSettingsMutationVariables) => Promise<WorkspacesUpdateSettingsMutationData>;
};
//# sourceMappingURL=workspacesUpdateSettings.d.ts.map
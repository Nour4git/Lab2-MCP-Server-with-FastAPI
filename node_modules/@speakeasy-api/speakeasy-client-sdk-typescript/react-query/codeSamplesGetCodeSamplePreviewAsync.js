"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.useCodeSamplesGetCodeSamplePreviewAsync = useCodeSamplesGetCodeSamplePreviewAsync;
exports.useCodeSamplesGetCodeSamplePreviewAsyncSuspense = useCodeSamplesGetCodeSamplePreviewAsyncSuspense;
exports.prefetchCodeSamplesGetCodeSamplePreviewAsync = prefetchCodeSamplesGetCodeSamplePreviewAsync;
exports.setCodeSamplesGetCodeSamplePreviewAsyncData = setCodeSamplesGetCodeSamplePreviewAsyncData;
exports.invalidateCodeSamplesGetCodeSamplePreviewAsync = invalidateCodeSamplesGetCodeSamplePreviewAsync;
exports.invalidateAllCodeSamplesGetCodeSamplePreviewAsync = invalidateAllCodeSamplesGetCodeSamplePreviewAsync;
exports.buildCodeSamplesGetCodeSamplePreviewAsyncQuery = buildCodeSamplesGetCodeSamplePreviewAsyncQuery;
exports.queryKeyCodeSamplesGetCodeSamplePreviewAsync = queryKeyCodeSamplesGetCodeSamplePreviewAsync;
const react_query_1 = require("@tanstack/react-query");
const codeSamplesGetCodeSamplePreviewAsync_js_1 = require("../funcs/codeSamplesGetCodeSamplePreviewAsync.js");
const primitives_js_1 = require("../lib/primitives.js");
const fp_js_1 = require("../sdk/types/fp.js");
const _context_js_1 = require("./_context.js");
/**
 * Poll for the result of an asynchronous Code Sample preview generation.
 *
 * @remarks
 * Poll for the result of an asynchronous Code Sample preview generation.
 */
function useCodeSamplesGetCodeSamplePreviewAsync(request, options) {
    const client = (0, _context_js_1.useSpeakeasyContext)();
    return (0, react_query_1.useQuery)({
        ...buildCodeSamplesGetCodeSamplePreviewAsyncQuery(client, request, options),
        ...options,
    });
}
/**
 * Poll for the result of an asynchronous Code Sample preview generation.
 *
 * @remarks
 * Poll for the result of an asynchronous Code Sample preview generation.
 */
function useCodeSamplesGetCodeSamplePreviewAsyncSuspense(request, options) {
    const client = (0, _context_js_1.useSpeakeasyContext)();
    return (0, react_query_1.useSuspenseQuery)({
        ...buildCodeSamplesGetCodeSamplePreviewAsyncQuery(client, request, options),
        ...options,
    });
}
function prefetchCodeSamplesGetCodeSamplePreviewAsync(queryClient, client$, request) {
    return queryClient.prefetchQuery({
        ...buildCodeSamplesGetCodeSamplePreviewAsyncQuery(client$, request),
    });
}
function setCodeSamplesGetCodeSamplePreviewAsyncData(client, queryKeyBase, data) {
    const key = queryKeyCodeSamplesGetCodeSamplePreviewAsync(...queryKeyBase);
    return client.setQueryData(key, data);
}
function invalidateCodeSamplesGetCodeSamplePreviewAsync(client, queryKeyBase, filters) {
    return client.invalidateQueries({
        ...filters,
        queryKey: [
            "@speakeasy-api/speakeasy-client-sdk-typescript",
            "CodeSamples",
            "getCodeSamplePreviewAsync",
            ...queryKeyBase,
        ],
    });
}
function invalidateAllCodeSamplesGetCodeSamplePreviewAsync(client, filters) {
    return client.invalidateQueries({
        ...filters,
        queryKey: [
            "@speakeasy-api/speakeasy-client-sdk-typescript",
            "CodeSamples",
            "getCodeSamplePreviewAsync",
        ],
    });
}
function buildCodeSamplesGetCodeSamplePreviewAsyncQuery(client$, request, options) {
    return {
        queryKey: queryKeyCodeSamplesGetCodeSamplePreviewAsync(request.jobID),
        queryFn: async function codeSamplesGetCodeSamplePreviewAsyncQueryFn(ctx) {
            const sig = (0, primitives_js_1.combineSignals)(ctx.signal, options?.fetchOptions?.signal);
            const mergedOptions = {
                ...options,
                fetchOptions: { ...options?.fetchOptions, signal: sig },
            };
            return (0, fp_js_1.unwrapAsync)((0, codeSamplesGetCodeSamplePreviewAsync_js_1.codeSamplesGetCodeSamplePreviewAsync)(client$, request, mergedOptions));
        },
    };
}
function queryKeyCodeSamplesGetCodeSamplePreviewAsync(jobID) {
    return [
        "@speakeasy-api/speakeasy-client-sdk-typescript",
        "CodeSamples",
        "getCodeSamplePreviewAsync",
        jobID,
    ];
}
//# sourceMappingURL=codeSamplesGetCodeSamplePreviewAsync.js.map
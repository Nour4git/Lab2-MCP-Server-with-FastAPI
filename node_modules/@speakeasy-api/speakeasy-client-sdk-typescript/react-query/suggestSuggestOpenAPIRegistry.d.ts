import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type SuggestSuggestOpenAPIRegistryMutationVariables = {
    request: operations.SuggestOpenAPIRegistryRequest;
    options?: RequestOptions;
};
export type SuggestSuggestOpenAPIRegistryMutationData = ReadableStream<Uint8Array>;
/**
 * Generate suggestions for improving an OpenAPI document stored in the registry.
 *
 * @remarks
 * Get suggestions from an LLM model for improving an OpenAPI document stored in the registry.
 */
export declare function useSuggestSuggestOpenAPIRegistryMutation(options?: MutationHookOptions<SuggestSuggestOpenAPIRegistryMutationData, Error, SuggestSuggestOpenAPIRegistryMutationVariables>): UseMutationResult<SuggestSuggestOpenAPIRegistryMutationData, Error, SuggestSuggestOpenAPIRegistryMutationVariables>;
export declare function mutationKeySuggestSuggestOpenAPIRegistry(): MutationKey;
export declare function buildSuggestSuggestOpenAPIRegistryMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: SuggestSuggestOpenAPIRegistryMutationVariables) => Promise<SuggestSuggestOpenAPIRegistryMutationData>;
};
//# sourceMappingURL=suggestSuggestOpenAPIRegistry.d.ts.map
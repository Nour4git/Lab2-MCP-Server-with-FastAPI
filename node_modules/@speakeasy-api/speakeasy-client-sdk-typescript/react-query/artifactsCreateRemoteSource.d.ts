import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type ArtifactsCreateRemoteSourceMutationVariables = {
    request?: shared.RemoteSource | undefined;
    options?: RequestOptions;
};
export type ArtifactsCreateRemoteSourceMutationData = void;
/**
 * Configure a new remote source
 */
export declare function useArtifactsCreateRemoteSourceMutation(options?: MutationHookOptions<ArtifactsCreateRemoteSourceMutationData, Error, ArtifactsCreateRemoteSourceMutationVariables>): UseMutationResult<ArtifactsCreateRemoteSourceMutationData, Error, ArtifactsCreateRemoteSourceMutationVariables>;
export declare function mutationKeyArtifactsCreateRemoteSource(): MutationKey;
export declare function buildArtifactsCreateRemoteSourceMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: ArtifactsCreateRemoteSourceMutationVariables) => Promise<ArtifactsCreateRemoteSourceMutationData>;
};
//# sourceMappingURL=artifactsCreateRemoteSource.d.ts.map
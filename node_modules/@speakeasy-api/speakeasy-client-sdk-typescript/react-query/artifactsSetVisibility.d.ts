import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type ArtifactsSetVisibilityMutationVariables = {
    request: operations.SetVisibilityRequest;
    options?: RequestOptions;
};
export type ArtifactsSetVisibilityMutationData = void;
/**
 * Set visibility of a namespace with an existing metadata entry
 */
export declare function useArtifactsSetVisibilityMutation(options?: MutationHookOptions<ArtifactsSetVisibilityMutationData, Error, ArtifactsSetVisibilityMutationVariables>): UseMutationResult<ArtifactsSetVisibilityMutationData, Error, ArtifactsSetVisibilityMutationVariables>;
export declare function mutationKeyArtifactsSetVisibility(): MutationKey;
export declare function buildArtifactsSetVisibilityMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: ArtifactsSetVisibilityMutationVariables) => Promise<ArtifactsSetVisibilityMutationData>;
};
//# sourceMappingURL=artifactsSetVisibility.d.ts.map
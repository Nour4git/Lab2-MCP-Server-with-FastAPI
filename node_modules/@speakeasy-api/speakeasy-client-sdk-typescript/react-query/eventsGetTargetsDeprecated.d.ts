import { InvalidateQueryFilters, QueryClient, QueryFunctionContext, QueryKey, UseQueryResult, UseSuspenseQueryResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import * as shared from "../sdk/models/shared/index.js";
import { QueryHookOptions, SuspenseQueryHookOptions, TupleToPrefixes } from "./_types.js";
export type EventsGetTargetsDeprecatedQueryData = Array<shared.TargetSDK>;
/**
 * Load targets for a particular workspace
 */
export declare function useEventsGetTargetsDeprecated(request: operations.GetWorkspaceTargetsDeprecatedRequest, options?: QueryHookOptions<EventsGetTargetsDeprecatedQueryData>): UseQueryResult<EventsGetTargetsDeprecatedQueryData, Error>;
/**
 * Load targets for a particular workspace
 */
export declare function useEventsGetTargetsDeprecatedSuspense(request: operations.GetWorkspaceTargetsDeprecatedRequest, options?: SuspenseQueryHookOptions<EventsGetTargetsDeprecatedQueryData>): UseSuspenseQueryResult<EventsGetTargetsDeprecatedQueryData, Error>;
export declare function prefetchEventsGetTargetsDeprecated(queryClient: QueryClient, client$: SpeakeasyCore, request: operations.GetWorkspaceTargetsDeprecatedRequest): Promise<void>;
export declare function setEventsGetTargetsDeprecatedData(client: QueryClient, queryKeyBase: [
    workspaceId: string | undefined,
    parameters: {
        afterLastEventCreatedAt?: Date | undefined;
    }
], data: EventsGetTargetsDeprecatedQueryData): EventsGetTargetsDeprecatedQueryData | undefined;
export declare function invalidateEventsGetTargetsDeprecated(client: QueryClient, queryKeyBase: TupleToPrefixes<[
    workspaceId: string | undefined,
    parameters: {
        afterLastEventCreatedAt?: Date | undefined;
    }
]>, filters?: Omit<InvalidateQueryFilters, "queryKey" | "predicate" | "exact">): Promise<void>;
export declare function invalidateAllEventsGetTargetsDeprecated(client: QueryClient, filters?: Omit<InvalidateQueryFilters, "queryKey" | "predicate" | "exact">): Promise<void>;
export declare function buildEventsGetTargetsDeprecatedQuery(client$: SpeakeasyCore, request: operations.GetWorkspaceTargetsDeprecatedRequest, options?: RequestOptions): {
    queryKey: QueryKey;
    queryFn: (context: QueryFunctionContext) => Promise<EventsGetTargetsDeprecatedQueryData>;
};
export declare function queryKeyEventsGetTargetsDeprecated(workspaceId: string | undefined, parameters: {
    afterLastEventCreatedAt?: Date | undefined;
}): QueryKey;
//# sourceMappingURL=eventsGetTargetsDeprecated.d.ts.map
import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type GithubConfigureTargetMutationVariables = {
    request: shared.GithubConfigureTargetRequest;
    options?: RequestOptions;
};
export type GithubConfigureTargetMutationData = void;
export declare function useGithubConfigureTargetMutation(options?: MutationHookOptions<GithubConfigureTargetMutationData, Error, GithubConfigureTargetMutationVariables>): UseMutationResult<GithubConfigureTargetMutationData, Error, GithubConfigureTargetMutationVariables>;
export declare function mutationKeyGithubConfigureTarget(): MutationKey;
export declare function buildGithubConfigureTargetMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: GithubConfigureTargetMutationVariables) => Promise<GithubConfigureTargetMutationData>;
};
//# sourceMappingURL=githubConfigureTarget.d.ts.map
import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type ArtifactsPostTagsMutationVariables = {
    request: operations.PostTagsRequest;
    options?: RequestOptions;
};
export type ArtifactsPostTagsMutationData = void;
/**
 * Add tags to an existing revision
 */
export declare function useArtifactsPostTagsMutation(options?: MutationHookOptions<ArtifactsPostTagsMutationData, Error, ArtifactsPostTagsMutationVariables>): UseMutationResult<ArtifactsPostTagsMutationData, Error, ArtifactsPostTagsMutationVariables>;
export declare function mutationKeyArtifactsPostTags(): MutationKey;
export declare function buildArtifactsPostTagsMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: ArtifactsPostTagsMutationVariables) => Promise<ArtifactsPostTagsMutationData>;
};
//# sourceMappingURL=artifactsPostTags.d.ts.map
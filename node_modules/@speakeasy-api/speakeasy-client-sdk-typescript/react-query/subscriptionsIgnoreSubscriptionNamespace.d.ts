import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type SubscriptionsIgnoreSubscriptionNamespaceMutationVariables = {
    request: operations.IgnoreSubscriptionNamespaceRequest;
    options?: RequestOptions;
};
export type SubscriptionsIgnoreSubscriptionNamespaceMutationData = void;
/**
 * Ignored a namespace for a subscription
 */
export declare function useSubscriptionsIgnoreSubscriptionNamespaceMutation(options?: MutationHookOptions<SubscriptionsIgnoreSubscriptionNamespaceMutationData, Error, SubscriptionsIgnoreSubscriptionNamespaceMutationVariables>): UseMutationResult<SubscriptionsIgnoreSubscriptionNamespaceMutationData, Error, SubscriptionsIgnoreSubscriptionNamespaceMutationVariables>;
export declare function mutationKeySubscriptionsIgnoreSubscriptionNamespace(): MutationKey;
export declare function buildSubscriptionsIgnoreSubscriptionNamespaceMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: SubscriptionsIgnoreSubscriptionNamespaceMutationVariables) => Promise<SubscriptionsIgnoreSubscriptionNamespaceMutationData>;
};
//# sourceMappingURL=subscriptionsIgnoreSubscriptionNamespace.d.ts.map
import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type ArtifactsSetArchivedMutationVariables = {
    request: operations.ArchiveNamespaceRequest;
    options?: RequestOptions;
};
export type ArtifactsSetArchivedMutationData = void;
/**
 * Set whether a namespace is archived
 */
export declare function useArtifactsSetArchivedMutation(options?: MutationHookOptions<ArtifactsSetArchivedMutationData, Error, ArtifactsSetArchivedMutationVariables>): UseMutationResult<ArtifactsSetArchivedMutationData, Error, ArtifactsSetArchivedMutationVariables>;
export declare function mutationKeyArtifactsSetArchived(): MutationKey;
export declare function buildArtifactsSetArchivedMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: ArtifactsSetArchivedMutationVariables) => Promise<ArtifactsSetArchivedMutationData>;
};
//# sourceMappingURL=artifactsSetArchived.d.ts.map
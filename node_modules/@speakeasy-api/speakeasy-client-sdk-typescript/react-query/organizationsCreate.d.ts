import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type OrganizationsCreateMutationVariables = {
    request: shared.Organization;
    options?: RequestOptions;
};
export type OrganizationsCreateMutationData = shared.Organization;
/**
 * Create an organization
 *
 * @remarks
 * Creates an organization
 */
export declare function useOrganizationsCreateMutation(options?: MutationHookOptions<OrganizationsCreateMutationData, Error, OrganizationsCreateMutationVariables>): UseMutationResult<OrganizationsCreateMutationData, Error, OrganizationsCreateMutationVariables>;
export declare function mutationKeyOrganizationsCreate(): MutationKey;
export declare function buildOrganizationsCreateMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: OrganizationsCreateMutationVariables) => Promise<OrganizationsCreateMutationData>;
};
//# sourceMappingURL=organizationsCreate.d.ts.map
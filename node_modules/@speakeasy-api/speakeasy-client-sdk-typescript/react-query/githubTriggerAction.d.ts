import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type GithubTriggerActionMutationVariables = {
    request: shared.GithubTriggerActionRequest;
    options?: RequestOptions;
};
export type GithubTriggerActionMutationData = void;
export declare function useGithubTriggerActionMutation(options?: MutationHookOptions<GithubTriggerActionMutationData, Error, GithubTriggerActionMutationVariables>): UseMutationResult<GithubTriggerActionMutationData, Error, GithubTriggerActionMutationVariables>;
export declare function mutationKeyGithubTriggerAction(): MutationKey;
export declare function buildGithubTriggerActionMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: GithubTriggerActionMutationVariables) => Promise<GithubTriggerActionMutationData>;
};
//# sourceMappingURL=githubTriggerAction.d.ts.map
import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type PublishingTokensDeleteMutationVariables = {
    request: operations.DeletePublishingTokenRequest;
    options?: RequestOptions;
};
export type PublishingTokensDeleteMutationData = void;
/**
 * Delete a specific publishing token
 *
 * @remarks
 * Delete a particular publishing token.
 */
export declare function usePublishingTokensDeleteMutation(options?: MutationHookOptions<PublishingTokensDeleteMutationData, Error, PublishingTokensDeleteMutationVariables>): UseMutationResult<PublishingTokensDeleteMutationData, Error, PublishingTokensDeleteMutationVariables>;
export declare function mutationKeyPublishingTokensDelete(): MutationKey;
export declare function buildPublishingTokensDeleteMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: PublishingTokensDeleteMutationVariables) => Promise<PublishingTokensDeleteMutationData>;
};
//# sourceMappingURL=publishingTokensDelete.d.ts.map
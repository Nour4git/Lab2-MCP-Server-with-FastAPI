import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type WorkspacesCreateMutationVariables = {
    request: shared.Workspace;
    options?: RequestOptions;
};
export type WorkspacesCreateMutationData = shared.Workspace;
/**
 * Create a workspace
 *
 * @remarks
 * Creates a workspace
 */
export declare function useWorkspacesCreateMutation(options?: MutationHookOptions<WorkspacesCreateMutationData, Error, WorkspacesCreateMutationVariables>): UseMutationResult<WorkspacesCreateMutationData, Error, WorkspacesCreateMutationVariables>;
export declare function mutationKeyWorkspacesCreate(): MutationKey;
export declare function buildWorkspacesCreateMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: WorkspacesCreateMutationVariables) => Promise<WorkspacesCreateMutationData>;
};
//# sourceMappingURL=workspacesCreate.d.ts.map
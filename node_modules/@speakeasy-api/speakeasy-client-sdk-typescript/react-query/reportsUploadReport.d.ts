import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type ReportsUploadReportMutationVariables = {
    request: operations.UploadReportRequestBody;
    options?: RequestOptions;
};
export type ReportsUploadReportMutationData = operations.UploadReportUploadedReport;
/**
 * Upload a report.
 */
export declare function useReportsUploadReportMutation(options?: MutationHookOptions<ReportsUploadReportMutationData, Error, ReportsUploadReportMutationVariables>): UseMutationResult<ReportsUploadReportMutationData, Error, ReportsUploadReportMutationVariables>;
export declare function mutationKeyReportsUploadReport(): MutationKey;
export declare function buildReportsUploadReportMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: ReportsUploadReportMutationVariables) => Promise<ReportsUploadReportMutationData>;
};
//# sourceMappingURL=reportsUploadReport.d.ts.map
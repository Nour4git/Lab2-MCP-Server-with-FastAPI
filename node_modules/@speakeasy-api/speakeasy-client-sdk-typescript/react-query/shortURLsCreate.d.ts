import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type ShortURLsCreateMutationVariables = {
    request: operations.CreateRequestBody;
    options?: RequestOptions;
};
export type ShortURLsCreateMutationData = shared.ShortURL;
/**
 * Shorten a URL.
 */
export declare function useShortURLsCreateMutation(options?: MutationHookOptions<ShortURLsCreateMutationData, Error, ShortURLsCreateMutationVariables>): UseMutationResult<ShortURLsCreateMutationData, Error, ShortURLsCreateMutationVariables>;
export declare function mutationKeyShortURLsCreate(): MutationKey;
export declare function buildShortURLsCreateMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: ShortURLsCreateMutationVariables) => Promise<ShortURLsCreateMutationData>;
};
//# sourceMappingURL=shortURLsCreate.d.ts.map
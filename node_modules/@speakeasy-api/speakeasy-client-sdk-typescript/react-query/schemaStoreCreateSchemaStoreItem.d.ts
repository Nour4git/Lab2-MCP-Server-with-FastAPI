import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type SchemaStoreCreateSchemaStoreItemMutationVariables = {
    request: operations.CreateSchemaStoreItemRequestBody;
    options?: RequestOptions;
};
export type SchemaStoreCreateSchemaStoreItemMutationData = shared.SchemaStoreItem;
/**
 * Create a schema in the schema store
 */
export declare function useSchemaStoreCreateSchemaStoreItemMutation(options?: MutationHookOptions<SchemaStoreCreateSchemaStoreItemMutationData, Error, SchemaStoreCreateSchemaStoreItemMutationVariables>): UseMutationResult<SchemaStoreCreateSchemaStoreItemMutationData, Error, SchemaStoreCreateSchemaStoreItemMutationVariables>;
export declare function mutationKeySchemaStoreCreateSchemaStoreItem(): MutationKey;
export declare function buildSchemaStoreCreateSchemaStoreItemMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: SchemaStoreCreateSchemaStoreItemMutationVariables) => Promise<SchemaStoreCreateSchemaStoreItemMutationData>;
};
//# sourceMappingURL=schemaStoreCreateSchemaStoreItem.d.ts.map
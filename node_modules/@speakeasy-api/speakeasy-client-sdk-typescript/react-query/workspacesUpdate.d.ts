import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type WorkspacesUpdateMutationVariables = {
    request: operations.UpdateWorkspaceDetailsRequest;
    options?: RequestOptions;
};
export type WorkspacesUpdateMutationData = void;
/**
 * Update workspace details
 *
 * @remarks
 * Update information about a particular workspace.
 */
export declare function useWorkspacesUpdateMutation(options?: MutationHookOptions<WorkspacesUpdateMutationData, Error, WorkspacesUpdateMutationVariables>): UseMutationResult<WorkspacesUpdateMutationData, Error, WorkspacesUpdateMutationVariables>;
export declare function mutationKeyWorkspacesUpdate(): MutationKey;
export declare function buildWorkspacesUpdateMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: WorkspacesUpdateMutationVariables) => Promise<WorkspacesUpdateMutationData>;
};
//# sourceMappingURL=workspacesUpdate.d.ts.map
import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type GithubConfigureCodeSamplesMutationVariables = {
    request: shared.GithubConfigureCodeSamplesRequest;
    options?: RequestOptions;
};
export type GithubConfigureCodeSamplesMutationData = shared.GithubConfigureCodeSamplesResponse;
export declare function useGithubConfigureCodeSamplesMutation(options?: MutationHookOptions<GithubConfigureCodeSamplesMutationData, Error, GithubConfigureCodeSamplesMutationVariables>): UseMutationResult<GithubConfigureCodeSamplesMutationData, Error, GithubConfigureCodeSamplesMutationVariables>;
export declare function mutationKeyGithubConfigureCodeSamples(): MutationKey;
export declare function buildGithubConfigureCodeSamplesMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: GithubConfigureCodeSamplesMutationVariables) => Promise<GithubConfigureCodeSamplesMutationData>;
};
//# sourceMappingURL=githubConfigureCodeSamples.d.ts.map
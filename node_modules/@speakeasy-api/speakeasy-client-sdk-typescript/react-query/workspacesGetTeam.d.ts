import { InvalidateQueryFilters, QueryClient, QueryFunctionContext, QueryKey, UseQueryResult, UseSuspenseQueryResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import * as shared from "../sdk/models/shared/index.js";
import { QueryHookOptions, SuspenseQueryHookOptions, TupleToPrefixes } from "./_types.js";
export type WorkspacesGetTeamQueryData = shared.WorkspaceTeamResponse;
/**
 * Get team members for a particular workspace
 */
export declare function useWorkspacesGetTeam(request: operations.GetWorkspaceTeamRequest, options?: QueryHookOptions<WorkspacesGetTeamQueryData>): UseQueryResult<WorkspacesGetTeamQueryData, Error>;
/**
 * Get team members for a particular workspace
 */
export declare function useWorkspacesGetTeamSuspense(request: operations.GetWorkspaceTeamRequest, options?: SuspenseQueryHookOptions<WorkspacesGetTeamQueryData>): UseSuspenseQueryResult<WorkspacesGetTeamQueryData, Error>;
export declare function prefetchWorkspacesGetTeam(queryClient: QueryClient, client$: SpeakeasyCore, request: operations.GetWorkspaceTeamRequest): Promise<void>;
export declare function setWorkspacesGetTeamData(client: QueryClient, queryKeyBase: [workspaceId: string | undefined], data: WorkspacesGetTeamQueryData): WorkspacesGetTeamQueryData | undefined;
export declare function invalidateWorkspacesGetTeam(client: QueryClient, queryKeyBase: TupleToPrefixes<[workspaceId: string | undefined]>, filters?: Omit<InvalidateQueryFilters, "queryKey" | "predicate" | "exact">): Promise<void>;
export declare function invalidateAllWorkspacesGetTeam(client: QueryClient, filters?: Omit<InvalidateQueryFilters, "queryKey" | "predicate" | "exact">): Promise<void>;
export declare function buildWorkspacesGetTeamQuery(client$: SpeakeasyCore, request: operations.GetWorkspaceTeamRequest, options?: RequestOptions): {
    queryKey: QueryKey;
    queryFn: (context: QueryFunctionContext) => Promise<WorkspacesGetTeamQueryData>;
};
export declare function queryKeyWorkspacesGetTeam(workspaceId: string | undefined): QueryKey;
//# sourceMappingURL=workspacesGetTeam.d.ts.map
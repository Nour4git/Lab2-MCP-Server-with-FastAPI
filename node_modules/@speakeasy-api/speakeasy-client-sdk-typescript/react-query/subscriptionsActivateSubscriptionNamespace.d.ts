import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type SubscriptionsActivateSubscriptionNamespaceMutationVariables = {
    request: operations.ActivateSubscriptionNamespaceRequest;
    options?: RequestOptions;
};
export type SubscriptionsActivateSubscriptionNamespaceMutationData = void;
/**
 * Activate an ignored namespace for a subscription
 */
export declare function useSubscriptionsActivateSubscriptionNamespaceMutation(options?: MutationHookOptions<SubscriptionsActivateSubscriptionNamespaceMutationData, Error, SubscriptionsActivateSubscriptionNamespaceMutationVariables>): UseMutationResult<SubscriptionsActivateSubscriptionNamespaceMutationData, Error, SubscriptionsActivateSubscriptionNamespaceMutationVariables>;
export declare function mutationKeySubscriptionsActivateSubscriptionNamespace(): MutationKey;
export declare function buildSubscriptionsActivateSubscriptionNamespaceMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: SubscriptionsActivateSubscriptionNamespaceMutationVariables) => Promise<SubscriptionsActivateSubscriptionNamespaceMutationData>;
};
//# sourceMappingURL=subscriptionsActivateSubscriptionNamespace.d.ts.map
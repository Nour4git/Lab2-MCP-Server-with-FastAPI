import { InvalidateQueryFilters, QueryClient, QueryFunctionContext, QueryKey, UseQueryResult, UseSuspenseQueryResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { QueryHookOptions, SuspenseQueryHookOptions, TupleToPrefixes } from "./_types.js";
export type CodeSamplesGetCodeSamplePreviewAsyncQueryData = operations.GetCodeSamplePreviewAsyncResponse;
/**
 * Poll for the result of an asynchronous Code Sample preview generation.
 *
 * @remarks
 * Poll for the result of an asynchronous Code Sample preview generation.
 */
export declare function useCodeSamplesGetCodeSamplePreviewAsync(request: operations.GetCodeSamplePreviewAsyncRequest, options?: QueryHookOptions<CodeSamplesGetCodeSamplePreviewAsyncQueryData>): UseQueryResult<CodeSamplesGetCodeSamplePreviewAsyncQueryData, Error>;
/**
 * Poll for the result of an asynchronous Code Sample preview generation.
 *
 * @remarks
 * Poll for the result of an asynchronous Code Sample preview generation.
 */
export declare function useCodeSamplesGetCodeSamplePreviewAsyncSuspense(request: operations.GetCodeSamplePreviewAsyncRequest, options?: SuspenseQueryHookOptions<CodeSamplesGetCodeSamplePreviewAsyncQueryData>): UseSuspenseQueryResult<CodeSamplesGetCodeSamplePreviewAsyncQueryData, Error>;
export declare function prefetchCodeSamplesGetCodeSamplePreviewAsync(queryClient: QueryClient, client$: SpeakeasyCore, request: operations.GetCodeSamplePreviewAsyncRequest): Promise<void>;
export declare function setCodeSamplesGetCodeSamplePreviewAsyncData(client: QueryClient, queryKeyBase: [jobID: string], data: CodeSamplesGetCodeSamplePreviewAsyncQueryData): CodeSamplesGetCodeSamplePreviewAsyncQueryData | undefined;
export declare function invalidateCodeSamplesGetCodeSamplePreviewAsync(client: QueryClient, queryKeyBase: TupleToPrefixes<[jobID: string]>, filters?: Omit<InvalidateQueryFilters, "queryKey" | "predicate" | "exact">): Promise<void>;
export declare function invalidateAllCodeSamplesGetCodeSamplePreviewAsync(client: QueryClient, filters?: Omit<InvalidateQueryFilters, "queryKey" | "predicate" | "exact">): Promise<void>;
export declare function buildCodeSamplesGetCodeSamplePreviewAsyncQuery(client$: SpeakeasyCore, request: operations.GetCodeSamplePreviewAsyncRequest, options?: RequestOptions): {
    queryKey: QueryKey;
    queryFn: (context: QueryFunctionContext) => Promise<CodeSamplesGetCodeSamplePreviewAsyncQueryData>;
};
export declare function queryKeyCodeSamplesGetCodeSamplePreviewAsync(jobID: string): QueryKey;
//# sourceMappingURL=codeSamplesGetCodeSamplePreviewAsync.d.ts.map
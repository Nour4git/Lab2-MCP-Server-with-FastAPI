import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type WorkspacesRevokeAccessMutationVariables = {
    request: operations.RevokeUserAccessToWorkspaceRequest;
    options?: RequestOptions;
};
export type WorkspacesRevokeAccessMutationData = void;
/**
 * Revoke a user's access to a particular workspace
 */
export declare function useWorkspacesRevokeAccessMutation(options?: MutationHookOptions<WorkspacesRevokeAccessMutationData, Error, WorkspacesRevokeAccessMutationVariables>): UseMutationResult<WorkspacesRevokeAccessMutationData, Error, WorkspacesRevokeAccessMutationVariables>;
export declare function mutationKeyWorkspacesRevokeAccess(): MutationKey;
export declare function buildWorkspacesRevokeAccessMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: WorkspacesRevokeAccessMutationVariables) => Promise<WorkspacesRevokeAccessMutationData>;
};
//# sourceMappingURL=workspacesRevokeAccess.d.ts.map
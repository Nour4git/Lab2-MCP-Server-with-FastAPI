import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type CodeSamplesGenerateCodeSamplePreviewAsyncMutationVariables = {
    request: shared.CodeSampleSchemaInput;
    options?: RequestOptions;
};
export type CodeSamplesGenerateCodeSamplePreviewAsyncMutationData = operations.GenerateCodeSamplePreviewAsyncResponseBody;
/**
 * Initiate asynchronous Code Sample preview generation from a file and configuration parameters, receiving an async JobID response for polling.
 *
 * @remarks
 * This endpoint generates Code Sample previews from a file and configuration parameters, receiving an async JobID response for polling.
 */
export declare function useCodeSamplesGenerateCodeSamplePreviewAsyncMutation(options?: MutationHookOptions<CodeSamplesGenerateCodeSamplePreviewAsyncMutationData, Error, CodeSamplesGenerateCodeSamplePreviewAsyncMutationVariables>): UseMutationResult<CodeSamplesGenerateCodeSamplePreviewAsyncMutationData, Error, CodeSamplesGenerateCodeSamplePreviewAsyncMutationVariables>;
export declare function mutationKeyCodeSamplesGenerateCodeSamplePreviewAsync(): MutationKey;
export declare function buildCodeSamplesGenerateCodeSamplePreviewAsyncMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: CodeSamplesGenerateCodeSamplePreviewAsyncMutationVariables) => Promise<CodeSamplesGenerateCodeSamplePreviewAsyncMutationData>;
};
//# sourceMappingURL=codeSamplesGenerateCodeSamplePreviewAsync.d.ts.map
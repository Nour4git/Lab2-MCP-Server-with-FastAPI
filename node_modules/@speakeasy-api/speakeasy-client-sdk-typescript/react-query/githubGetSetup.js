"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.useGithubGetSetup = useGithubGetSetup;
exports.useGithubGetSetupSuspense = useGithubGetSetupSuspense;
exports.prefetchGithubGetSetup = prefetchGithubGetSetup;
exports.setGithubGetSetupData = setGithubGetSetupData;
exports.invalidateGithubGetSetup = invalidateGithubGetSetup;
exports.invalidateAllGithubGetSetup = invalidateAllGithubGetSetup;
exports.buildGithubGetSetupQuery = buildGithubGetSetupQuery;
exports.queryKeyGithubGetSetup = queryKeyGithubGetSetup;
const react_query_1 = require("@tanstack/react-query");
const githubGetSetup_js_1 = require("../funcs/githubGetSetup.js");
const primitives_js_1 = require("../lib/primitives.js");
const fp_js_1 = require("../sdk/types/fp.js");
const _context_js_1 = require("./_context.js");
function useGithubGetSetup(request, options) {
    const client = (0, _context_js_1.useSpeakeasyContext)();
    return (0, react_query_1.useQuery)({
        ...buildGithubGetSetupQuery(client, request, options),
        ...options,
    });
}
function useGithubGetSetupSuspense(request, options) {
    const client = (0, _context_js_1.useSpeakeasyContext)();
    return (0, react_query_1.useSuspenseQuery)({
        ...buildGithubGetSetupQuery(client, request, options),
        ...options,
    });
}
function prefetchGithubGetSetup(queryClient, client$, request) {
    return queryClient.prefetchQuery({
        ...buildGithubGetSetupQuery(client$, request),
    });
}
function setGithubGetSetupData(client, queryKeyBase, data) {
    const key = queryKeyGithubGetSetup(...queryKeyBase);
    return client.setQueryData(key, data);
}
function invalidateGithubGetSetup(client, queryKeyBase, filters) {
    return client.invalidateQueries({
        ...filters,
        queryKey: [
            "@speakeasy-api/speakeasy-client-sdk-typescript",
            "Github",
            "getSetup",
            ...queryKeyBase,
        ],
    });
}
function invalidateAllGithubGetSetup(client, filters) {
    return client.invalidateQueries({
        ...filters,
        queryKey: [
            "@speakeasy-api/speakeasy-client-sdk-typescript",
            "Github",
            "getSetup",
        ],
    });
}
function buildGithubGetSetupQuery(client$, request, options) {
    return {
        queryKey: queryKeyGithubGetSetup({
            org: request.org,
            repo: request.repo,
            generateGenLockId: request.generateGenLockId,
        }),
        queryFn: async function githubGetSetupQueryFn(ctx) {
            const sig = (0, primitives_js_1.combineSignals)(ctx.signal, options?.fetchOptions?.signal);
            const mergedOptions = {
                ...options,
                fetchOptions: { ...options?.fetchOptions, signal: sig },
            };
            return (0, fp_js_1.unwrapAsync)((0, githubGetSetup_js_1.githubGetSetup)(client$, request, mergedOptions));
        },
    };
}
function queryKeyGithubGetSetup(parameters) {
    return [
        "@speakeasy-api/speakeasy-client-sdk-typescript",
        "Github",
        "getSetup",
        parameters,
    ];
}
//# sourceMappingURL=githubGetSetup.js.map
"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.useGithubCheckPublishingPRs = useGithubCheckPublishingPRs;
exports.useGithubCheckPublishingPRsSuspense = useGithubCheckPublishingPRsSuspense;
exports.prefetchGithubCheckPublishingPRs = prefetchGithubCheckPublishingPRs;
exports.setGithubCheckPublishingPRsData = setGithubCheckPublishingPRsData;
exports.invalidateGithubCheckPublishingPRs = invalidateGithubCheckPublishingPRs;
exports.invalidateAllGithubCheckPublishingPRs = invalidateAllGithubCheckPublishingPRs;
exports.buildGithubCheckPublishingPRsQuery = buildGithubCheckPublishingPRsQuery;
exports.queryKeyGithubCheckPublishingPRs = queryKeyGithubCheckPublishingPRs;
const react_query_1 = require("@tanstack/react-query");
const githubCheckPublishingPRs_js_1 = require("../funcs/githubCheckPublishingPRs.js");
const primitives_js_1 = require("../lib/primitives.js");
const fp_js_1 = require("../sdk/types/fp.js");
const _context_js_1 = require("./_context.js");
function useGithubCheckPublishingPRs(request, options) {
    const client = (0, _context_js_1.useSpeakeasyContext)();
    return (0, react_query_1.useQuery)({
        ...buildGithubCheckPublishingPRsQuery(client, request, options),
        ...options,
    });
}
function useGithubCheckPublishingPRsSuspense(request, options) {
    const client = (0, _context_js_1.useSpeakeasyContext)();
    return (0, react_query_1.useSuspenseQuery)({
        ...buildGithubCheckPublishingPRsQuery(client, request, options),
        ...options,
    });
}
function prefetchGithubCheckPublishingPRs(queryClient, client$, request) {
    return queryClient.prefetchQuery({
        ...buildGithubCheckPublishingPRsQuery(client$, request),
    });
}
function setGithubCheckPublishingPRsData(client, queryKeyBase, data) {
    const key = queryKeyGithubCheckPublishingPRs(...queryKeyBase);
    return client.setQueryData(key, data);
}
function invalidateGithubCheckPublishingPRs(client, queryKeyBase, filters) {
    return client.invalidateQueries({
        ...filters,
        queryKey: [
            "@speakeasy-api/speakeasy-client-sdk-typescript",
            "Github",
            "checkPublishingPRs",
            ...queryKeyBase,
        ],
    });
}
function invalidateAllGithubCheckPublishingPRs(client, filters) {
    return client.invalidateQueries({
        ...filters,
        queryKey: [
            "@speakeasy-api/speakeasy-client-sdk-typescript",
            "Github",
            "checkPublishingPRs",
        ],
    });
}
function buildGithubCheckPublishingPRsQuery(client$, request, options) {
    return {
        queryKey: queryKeyGithubCheckPublishingPRs({
            generateGenLockId: request.generateGenLockId,
            org: request.org,
            repo: request.repo,
        }),
        queryFn: async function githubCheckPublishingPRsQueryFn(ctx) {
            const sig = (0, primitives_js_1.combineSignals)(ctx.signal, options?.fetchOptions?.signal);
            const mergedOptions = {
                ...options,
                fetchOptions: { ...options?.fetchOptions, signal: sig },
            };
            return (0, fp_js_1.unwrapAsync)((0, githubCheckPublishingPRs_js_1.githubCheckPublishingPRs)(client$, request, mergedOptions));
        },
    };
}
function queryKeyGithubCheckPublishingPRs(parameters) {
    return [
        "@speakeasy-api/speakeasy-client-sdk-typescript",
        "Github",
        "checkPublishingPRs",
        parameters,
    ];
}
//# sourceMappingURL=githubCheckPublishingPRs.js.map
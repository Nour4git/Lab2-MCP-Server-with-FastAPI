import { InvalidateQueryFilters, QueryClient, QueryFunctionContext, QueryKey, UseQueryResult, UseSuspenseQueryResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import * as shared from "../sdk/models/shared/index.js";
import { QueryHookOptions, SuspenseQueryHookOptions, TupleToPrefixes } from "./_types.js";
export type GithubGetSetupQueryData = shared.GithubSetupStateResponse;
export declare function useGithubGetSetup(request: operations.GetGithubSetupStateRequest, options?: QueryHookOptions<GithubGetSetupQueryData>): UseQueryResult<GithubGetSetupQueryData, Error>;
export declare function useGithubGetSetupSuspense(request: operations.GetGithubSetupStateRequest, options?: SuspenseQueryHookOptions<GithubGetSetupQueryData>): UseSuspenseQueryResult<GithubGetSetupQueryData, Error>;
export declare function prefetchGithubGetSetup(queryClient: QueryClient, client$: SpeakeasyCore, request: operations.GetGithubSetupStateRequest): Promise<void>;
export declare function setGithubGetSetupData(client: QueryClient, queryKeyBase: [
    parameters: {
        org: string;
        repo: string;
        generateGenLockId: string;
    }
], data: GithubGetSetupQueryData): GithubGetSetupQueryData | undefined;
export declare function invalidateGithubGetSetup(client: QueryClient, queryKeyBase: TupleToPrefixes<[
    parameters: {
        org: string;
        repo: string;
        generateGenLockId: string;
    }
]>, filters?: Omit<InvalidateQueryFilters, "queryKey" | "predicate" | "exact">): Promise<void>;
export declare function invalidateAllGithubGetSetup(client: QueryClient, filters?: Omit<InvalidateQueryFilters, "queryKey" | "predicate" | "exact">): Promise<void>;
export declare function buildGithubGetSetupQuery(client$: SpeakeasyCore, request: operations.GetGithubSetupStateRequest, options?: RequestOptions): {
    queryKey: QueryKey;
    queryFn: (context: QueryFunctionContext) => Promise<GithubGetSetupQueryData>;
};
export declare function queryKeyGithubGetSetup(parameters: {
    org: string;
    repo: string;
    generateGenLockId: string;
}): QueryKey;
//# sourceMappingURL=githubGetSetup.d.ts.map
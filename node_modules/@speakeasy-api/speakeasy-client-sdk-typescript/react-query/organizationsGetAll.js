"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.useOrganizationsGetAll = useOrganizationsGetAll;
exports.useOrganizationsGetAllSuspense = useOrganizationsGetAllSuspense;
exports.prefetchOrganizationsGetAll = prefetchOrganizationsGetAll;
exports.setOrganizationsGetAllData = setOrganizationsGetAllData;
exports.invalidateAllOrganizationsGetAll = invalidateAllOrganizationsGetAll;
exports.buildOrganizationsGetAllQuery = buildOrganizationsGetAllQuery;
exports.queryKeyOrganizationsGetAll = queryKeyOrganizationsGetAll;
const react_query_1 = require("@tanstack/react-query");
const organizationsGetAll_js_1 = require("../funcs/organizationsGetAll.js");
const primitives_js_1 = require("../lib/primitives.js");
const fp_js_1 = require("../sdk/types/fp.js");
const _context_js_1 = require("./_context.js");
/**
 * Get organizations for a user
 *
 * @remarks
 * Returns a list of organizations a user has access too
 */
function useOrganizationsGetAll(options) {
    const client = (0, _context_js_1.useSpeakeasyContext)();
    return (0, react_query_1.useQuery)({
        ...buildOrganizationsGetAllQuery(client, options),
        ...options,
    });
}
/**
 * Get organizations for a user
 *
 * @remarks
 * Returns a list of organizations a user has access too
 */
function useOrganizationsGetAllSuspense(options) {
    const client = (0, _context_js_1.useSpeakeasyContext)();
    return (0, react_query_1.useSuspenseQuery)({
        ...buildOrganizationsGetAllQuery(client, options),
        ...options,
    });
}
function prefetchOrganizationsGetAll(queryClient, client$) {
    return queryClient.prefetchQuery({
        ...buildOrganizationsGetAllQuery(client$),
    });
}
function setOrganizationsGetAllData(client, data) {
    const key = queryKeyOrganizationsGetAll();
    return client.setQueryData(key, data);
}
function invalidateAllOrganizationsGetAll(client, filters) {
    return client.invalidateQueries({
        ...filters,
        queryKey: [
            "@speakeasy-api/speakeasy-client-sdk-typescript",
            "Organizations",
            "getAll",
        ],
    });
}
function buildOrganizationsGetAllQuery(client$, options) {
    return {
        queryKey: queryKeyOrganizationsGetAll(),
        queryFn: async function organizationsGetAllQueryFn(ctx) {
            const sig = (0, primitives_js_1.combineSignals)(ctx.signal, options?.fetchOptions?.signal);
            const mergedOptions = {
                ...options,
                fetchOptions: { ...options?.fetchOptions, signal: sig },
            };
            return (0, fp_js_1.unwrapAsync)((0, organizationsGetAll_js_1.organizationsGetAll)(client$, mergedOptions));
        },
    };
}
function queryKeyOrganizationsGetAll() {
    return [
        "@speakeasy-api/speakeasy-client-sdk-typescript",
        "Organizations",
        "getAll",
    ];
}
//# sourceMappingURL=organizationsGetAll.js.map
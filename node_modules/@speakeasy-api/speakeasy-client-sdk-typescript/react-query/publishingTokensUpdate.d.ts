import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type PublishingTokensUpdateMutationVariables = {
    request: operations.UpdatePublishingTokenExpirationRequest;
    options?: RequestOptions;
};
export type PublishingTokensUpdateMutationData = void;
/**
 * Updates the validitity period of a publishing token
 *
 * @remarks
 * Updates the validity period of a particular publishing token.
 */
export declare function usePublishingTokensUpdateMutation(options?: MutationHookOptions<PublishingTokensUpdateMutationData, Error, PublishingTokensUpdateMutationVariables>): UseMutationResult<PublishingTokensUpdateMutationData, Error, PublishingTokensUpdateMutationVariables>;
export declare function mutationKeyPublishingTokensUpdate(): MutationKey;
export declare function buildPublishingTokensUpdateMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: PublishingTokensUpdateMutationVariables) => Promise<PublishingTokensUpdateMutationData>;
};
//# sourceMappingURL=publishingTokensUpdate.d.ts.map
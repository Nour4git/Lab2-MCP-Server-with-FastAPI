import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as operations from "../sdk/models/operations/index.js";
import { MutationHookOptions } from "./_types.js";
export type WorkspacesDeleteTokenMutationVariables = {
    request: operations.DeleteWorkspaceTokenRequest;
    options?: RequestOptions;
};
export type WorkspacesDeleteTokenMutationData = void;
/**
 * Delete a token for a particular workspace
 */
export declare function useWorkspacesDeleteTokenMutation(options?: MutationHookOptions<WorkspacesDeleteTokenMutationData, Error, WorkspacesDeleteTokenMutationVariables>): UseMutationResult<WorkspacesDeleteTokenMutationData, Error, WorkspacesDeleteTokenMutationVariables>;
export declare function mutationKeyWorkspacesDeleteToken(): MutationKey;
export declare function buildWorkspacesDeleteTokenMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: WorkspacesDeleteTokenMutationVariables) => Promise<WorkspacesDeleteTokenMutationData>;
};
//# sourceMappingURL=workspacesDeleteToken.d.ts.map
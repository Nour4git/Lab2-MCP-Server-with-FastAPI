import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type SuggestSuggestItemsMutationVariables = {
    request: shared.SuggestItemsRequestBody;
    options?: RequestOptions;
};
export type SuggestSuggestItemsMutationData = Array<string>;
/**
 * Generate generic suggestions for a list of items.
 */
export declare function useSuggestSuggestItemsMutation(options?: MutationHookOptions<SuggestSuggestItemsMutationData, Error, SuggestSuggestItemsMutationVariables>): UseMutationResult<SuggestSuggestItemsMutationData, Error, SuggestSuggestItemsMutationVariables>;
export declare function mutationKeySuggestSuggestItems(): MutationKey;
export declare function buildSuggestSuggestItemsMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: SuggestSuggestItemsMutationVariables) => Promise<SuggestSuggestItemsMutationData>;
};
//# sourceMappingURL=suggestSuggestItems.d.ts.map
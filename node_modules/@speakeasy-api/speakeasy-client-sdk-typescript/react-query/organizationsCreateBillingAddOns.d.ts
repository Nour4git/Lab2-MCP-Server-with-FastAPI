import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type OrganizationsCreateBillingAddOnsMutationVariables = {
    request: shared.OrganizationBillingAddOnRequest;
    options?: RequestOptions;
};
export type OrganizationsCreateBillingAddOnsMutationData = shared.OrganizationBillingAddOnResponse;
/**
 * Create billing add ons
 */
export declare function useOrganizationsCreateBillingAddOnsMutation(options?: MutationHookOptions<OrganizationsCreateBillingAddOnsMutationData, Error, OrganizationsCreateBillingAddOnsMutationVariables>): UseMutationResult<OrganizationsCreateBillingAddOnsMutationData, Error, OrganizationsCreateBillingAddOnsMutationVariables>;
export declare function mutationKeyOrganizationsCreateBillingAddOns(): MutationKey;
export declare function buildOrganizationsCreateBillingAddOnsMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: OrganizationsCreateBillingAddOnsMutationVariables) => Promise<OrganizationsCreateBillingAddOnsMutationData>;
};
//# sourceMappingURL=organizationsCreateBillingAddOns.d.ts.map
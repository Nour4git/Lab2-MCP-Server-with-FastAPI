import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type ArtifactsPreflightMutationVariables = {
    request?: shared.PreflightRequest | undefined;
    options?: RequestOptions;
};
export type ArtifactsPreflightMutationData = shared.PreflightToken;
/**
 * Get access token for communicating with OCI distribution endpoints
 */
export declare function useArtifactsPreflightMutation(options?: MutationHookOptions<ArtifactsPreflightMutationData, Error, ArtifactsPreflightMutationVariables>): UseMutationResult<ArtifactsPreflightMutationData, Error, ArtifactsPreflightMutationVariables>;
export declare function mutationKeyArtifactsPreflight(): MutationKey;
export declare function buildArtifactsPreflightMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: ArtifactsPreflightMutationVariables) => Promise<ArtifactsPreflightMutationData>;
};
//# sourceMappingURL=artifactsPreflight.d.ts.map
import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type GithubStorePublishingSecretsMutationVariables = {
    request: shared.GithubStorePublishingSecretsRequest;
    options?: RequestOptions;
};
export type GithubStorePublishingSecretsMutationData = void;
export declare function useGithubStorePublishingSecretsMutation(options?: MutationHookOptions<GithubStorePublishingSecretsMutationData, Error, GithubStorePublishingSecretsMutationVariables>): UseMutationResult<GithubStorePublishingSecretsMutationData, Error, GithubStorePublishingSecretsMutationVariables>;
export declare function mutationKeyGithubStorePublishingSecrets(): MutationKey;
export declare function buildGithubStorePublishingSecretsMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: GithubStorePublishingSecretsMutationVariables) => Promise<GithubStorePublishingSecretsMutationData>;
};
//# sourceMappingURL=githubStorePublishingSecrets.d.ts.map
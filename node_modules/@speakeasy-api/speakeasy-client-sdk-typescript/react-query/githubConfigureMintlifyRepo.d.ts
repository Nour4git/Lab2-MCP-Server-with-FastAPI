import { MutationKey, UseMutationResult } from "@tanstack/react-query";
import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as shared from "../sdk/models/shared/index.js";
import { MutationHookOptions } from "./_types.js";
export type GithubConfigureMintlifyRepoMutationVariables = {
    request: shared.GithubConfigureMintlifyRepoRequest;
    options?: RequestOptions;
};
export type GithubConfigureMintlifyRepoMutationData = void;
export declare function useGithubConfigureMintlifyRepoMutation(options?: MutationHookOptions<GithubConfigureMintlifyRepoMutationData, Error, GithubConfigureMintlifyRepoMutationVariables>): UseMutationResult<GithubConfigureMintlifyRepoMutationData, Error, GithubConfigureMintlifyRepoMutationVariables>;
export declare function mutationKeyGithubConfigureMintlifyRepo(): MutationKey;
export declare function buildGithubConfigureMintlifyRepoMutation(client$: SpeakeasyCore, hookOptions?: RequestOptions): {
    mutationKey: MutationKey;
    mutationFn: (variables: GithubConfigureMintlifyRepoMutationVariables) => Promise<GithubConfigureMintlifyRepoMutationData>;
};
//# sourceMappingURL=githubConfigureMintlifyRepo.d.ts.map
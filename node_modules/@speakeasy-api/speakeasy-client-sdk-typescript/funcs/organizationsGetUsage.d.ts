import { SpeakeasyCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../sdk/models/errors/httpclienterrors.js";
import * as errors from "../sdk/models/errors/index.js";
import { ResponseValidationError } from "../sdk/models/errors/responsevalidationerror.js";
import { SDKValidationError } from "../sdk/models/errors/sdkvalidationerror.js";
import { SpeakeasyError } from "../sdk/models/errors/speakeasyerror.js";
import * as shared from "../sdk/models/shared/index.js";
import { APIPromise } from "../sdk/types/async.js";
import { Result } from "../sdk/types/fp.js";
/**
 * Get billing usage summary for a particular organization
 *
 * @remarks
 * Returns a billing usage summary by target languages for a particular organization
 */
export declare function organizationsGetUsage(client: SpeakeasyCore, options?: RequestOptions): APIPromise<Result<shared.OrganizationUsageResponse, errors.ErrorT | SpeakeasyError | ResponseValidationError | ConnectionError | RequestAbortedError | RequestTimeoutError | InvalidRequestError | UnexpectedClientError | SDKValidationError>>;
//# sourceMappingURL=organizationsGetUsage.d.ts.map
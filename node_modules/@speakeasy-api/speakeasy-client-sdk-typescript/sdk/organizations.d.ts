import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
export declare class Organizations extends ClientSDK {
    /**
     * Create an organization
     *
     * @remarks
     * Creates an organization
     */
    create(request: shared.Organization, options?: RequestOptions): Promise<shared.Organization>;
    /**
     * Create billing add ons
     */
    createBillingAddOns(request: shared.OrganizationBillingAddOnRequest, options?: RequestOptions): Promise<shared.OrganizationBillingAddOnResponse>;
    /**
     * Create a free trial for an organization
     *
     * @remarks
     * Creates a free trial for an organization
     */
    createFreeTrial(options?: RequestOptions): Promise<void>;
    /**
     * Delete billing add ons
     */
    deleteBillingAddOn(request: operations.DeleteBillingAddOnRequest, options?: RequestOptions): Promise<void>;
    /**
     * Get organization
     *
     * @remarks
     * Get information about a particular organization.
     */
    get(request: operations.GetOrganizationRequest, options?: RequestOptions): Promise<shared.Organization>;
    /**
     * Get organizations for a user
     *
     * @remarks
     * Returns a list of organizations a user has access too
     */
    getAll(options?: RequestOptions): Promise<Array<shared.Organization>>;
    /**
     * Get billing add ons
     */
    getBillingAddOns(options?: RequestOptions): Promise<shared.OrganizationBillingAddOnResponse>;
    /**
     * Get billing usage summary for a particular organization
     *
     * @remarks
     * Returns a billing usage summary by target languages for a particular organization
     */
    getUsage(options?: RequestOptions): Promise<shared.OrganizationUsageResponse>;
}
//# sourceMappingURL=organizations.d.ts.map
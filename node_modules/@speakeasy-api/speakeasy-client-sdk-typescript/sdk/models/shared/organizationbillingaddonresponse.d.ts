import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BillingAddOn } from "./billingaddon.js";
/**
 * Billing add on response
 */
export type OrganizationBillingAddOnResponse = {
    addOns: Array<BillingAddOn>;
};
/** @internal */
export declare const OrganizationBillingAddOnResponse$inboundSchema: z.ZodType<OrganizationBillingAddOnResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type OrganizationBillingAddOnResponse$Outbound = {
    add_ons: Array<string>;
};
/** @internal */
export declare const OrganizationBillingAddOnResponse$outboundSchema: z.ZodType<OrganizationBillingAddOnResponse$Outbound, z.ZodTypeDef, OrganizationBillingAddOnResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrganizationBillingAddOnResponse$ {
    /** @deprecated use `OrganizationBillingAddOnResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrganizationBillingAddOnResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrganizationBillingAddOnResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrganizationBillingAddOnResponse$Outbound, z.ZodTypeDef, OrganizationBillingAddOnResponse>;
    /** @deprecated use `OrganizationBillingAddOnResponse$Outbound` instead. */
    type Outbound = OrganizationBillingAddOnResponse$Outbound;
}
export declare function organizationBillingAddOnResponseToJSON(organizationBillingAddOnResponse: OrganizationBillingAddOnResponse): string;
export declare function organizationBillingAddOnResponseFromJSON(jsonString: string): SafeParseResult<OrganizationBillingAddOnResponse, SDKValidationError>;
//# sourceMappingURL=organizationbillingaddonresponse.d.ts.map
import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * A request to configure a GitHub repository for mintlify
 */
export type GithubConfigureMintlifyRepoRequest = {
    /**
     * The input OpenAPI document
     */
    input: string;
    /**
     * The GitHub organization name
     */
    org: string;
    /**
     * The overlays to apply
     */
    overlays: Array<string>;
    /**
     * The GitHub repository name
     */
    repo: string;
    /**
     * The subdirectory (location of mint.json)
     */
    subdirectory?: string | undefined;
};
/** @internal */
export declare const GithubConfigureMintlifyRepoRequest$inboundSchema: z.ZodType<GithubConfigureMintlifyRepoRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GithubConfigureMintlifyRepoRequest$Outbound = {
    input: string;
    org: string;
    overlays: Array<string>;
    repo: string;
    subdirectory?: string | undefined;
};
/** @internal */
export declare const GithubConfigureMintlifyRepoRequest$outboundSchema: z.ZodType<GithubConfigureMintlifyRepoRequest$Outbound, z.ZodTypeDef, GithubConfigureMintlifyRepoRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GithubConfigureMintlifyRepoRequest$ {
    /** @deprecated use `GithubConfigureMintlifyRepoRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GithubConfigureMintlifyRepoRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GithubConfigureMintlifyRepoRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GithubConfigureMintlifyRepoRequest$Outbound, z.ZodTypeDef, GithubConfigureMintlifyRepoRequest>;
    /** @deprecated use `GithubConfigureMintlifyRepoRequest$Outbound` instead. */
    type Outbound = GithubConfigureMintlifyRepoRequest$Outbound;
}
export declare function githubConfigureMintlifyRepoRequestToJSON(githubConfigureMintlifyRepoRequest: GithubConfigureMintlifyRepoRequest): string;
export declare function githubConfigureMintlifyRepoRequestFromJSON(jsonString: string): SafeParseResult<GithubConfigureMintlifyRepoRequest, SDKValidationError>;
//# sourceMappingURL=githubconfiguremintlifyreporequest.d.ts.map
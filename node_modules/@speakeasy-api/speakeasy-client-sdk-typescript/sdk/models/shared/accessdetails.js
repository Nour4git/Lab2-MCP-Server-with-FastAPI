"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessDetails$ = exports.AccessDetails$outboundSchema = exports.AccessDetails$inboundSchema = exports.Level$ = exports.Level$outboundSchema = exports.Level$inboundSchema = exports.Level = void 0;
exports.accessDetailsToJSON = accessDetailsToJSON;
exports.accessDetailsFromJSON = accessDetailsFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
exports.Level = {
    Allowed: "allowed",
    Warning: "warning",
    Blocked: "blocked",
};
/** @internal */
exports.Level$inboundSchema = z.nativeEnum(exports.Level);
/** @internal */
exports.Level$outboundSchema = exports.Level$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Level$;
(function (Level$) {
    /** @deprecated use `Level$inboundSchema` instead. */
    Level$.inboundSchema = exports.Level$inboundSchema;
    /** @deprecated use `Level$outboundSchema` instead. */
    Level$.outboundSchema = exports.Level$outboundSchema;
})(Level$ || (exports.Level$ = Level$ = {}));
/** @internal */
exports.AccessDetails$inboundSchema = z.object({
    generation_allowed: z.boolean(),
    level: exports.Level$inboundSchema.optional(),
    message: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "generation_allowed": "generationAllowed",
    });
});
/** @internal */
exports.AccessDetails$outboundSchema = z.object({
    generationAllowed: z.boolean(),
    level: exports.Level$outboundSchema.optional(),
    message: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        generationAllowed: "generation_allowed",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AccessDetails$;
(function (AccessDetails$) {
    /** @deprecated use `AccessDetails$inboundSchema` instead. */
    AccessDetails$.inboundSchema = exports.AccessDetails$inboundSchema;
    /** @deprecated use `AccessDetails$outboundSchema` instead. */
    AccessDetails$.outboundSchema = exports.AccessDetails$outboundSchema;
})(AccessDetails$ || (exports.AccessDetails$ = AccessDetails$ = {}));
function accessDetailsToJSON(accessDetails) {
    return JSON.stringify(exports.AccessDetails$outboundSchema.parse(accessDetails));
}
function accessDetailsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.AccessDetails$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccessDetails' from JSON`);
}
//# sourceMappingURL=accessdetails.js.map
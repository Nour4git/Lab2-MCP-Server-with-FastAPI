import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type Actions = {
    generationActionConfigured: boolean;
    publishActionConfigured: boolean;
};
export type Secrets = {
    apiKeyConfigured: boolean;
    publishingSecretsConfigured: boolean;
};
/**
 * The state of a particular SDK targets github setup
 */
export type GithubSetupStateResponse = {
    actions: Actions;
    appInstalled: boolean;
    secrets: Secrets;
};
/** @internal */
export declare const Actions$inboundSchema: z.ZodType<Actions, z.ZodTypeDef, unknown>;
/** @internal */
export type Actions$Outbound = {
    generation_action_configured: boolean;
    publish_action_configured: boolean;
};
/** @internal */
export declare const Actions$outboundSchema: z.ZodType<Actions$Outbound, z.ZodTypeDef, Actions>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Actions$ {
    /** @deprecated use `Actions$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Actions, z.ZodTypeDef, unknown>;
    /** @deprecated use `Actions$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Actions$Outbound, z.ZodTypeDef, Actions>;
    /** @deprecated use `Actions$Outbound` instead. */
    type Outbound = Actions$Outbound;
}
export declare function actionsToJSON(actions: Actions): string;
export declare function actionsFromJSON(jsonString: string): SafeParseResult<Actions, SDKValidationError>;
/** @internal */
export declare const Secrets$inboundSchema: z.ZodType<Secrets, z.ZodTypeDef, unknown>;
/** @internal */
export type Secrets$Outbound = {
    api_key_configured: boolean;
    publishing_secrets_configured: boolean;
};
/** @internal */
export declare const Secrets$outboundSchema: z.ZodType<Secrets$Outbound, z.ZodTypeDef, Secrets>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Secrets$ {
    /** @deprecated use `Secrets$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Secrets, z.ZodTypeDef, unknown>;
    /** @deprecated use `Secrets$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Secrets$Outbound, z.ZodTypeDef, Secrets>;
    /** @deprecated use `Secrets$Outbound` instead. */
    type Outbound = Secrets$Outbound;
}
export declare function secretsToJSON(secrets: Secrets): string;
export declare function secretsFromJSON(jsonString: string): SafeParseResult<Secrets, SDKValidationError>;
/** @internal */
export declare const GithubSetupStateResponse$inboundSchema: z.ZodType<GithubSetupStateResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GithubSetupStateResponse$Outbound = {
    actions: Actions$Outbound;
    app_installed: boolean;
    secrets: Secrets$Outbound;
};
/** @internal */
export declare const GithubSetupStateResponse$outboundSchema: z.ZodType<GithubSetupStateResponse$Outbound, z.ZodTypeDef, GithubSetupStateResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GithubSetupStateResponse$ {
    /** @deprecated use `GithubSetupStateResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GithubSetupStateResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GithubSetupStateResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GithubSetupStateResponse$Outbound, z.ZodTypeDef, GithubSetupStateResponse>;
    /** @deprecated use `GithubSetupStateResponse$Outbound` instead. */
    type Outbound = GithubSetupStateResponse$Outbound;
}
export declare function githubSetupStateResponseToJSON(githubSetupStateResponse: GithubSetupStateResponse): string;
export declare function githubSetupStateResponseFromJSON(jsonString: string): SafeParseResult<GithubSetupStateResponse, SDKValidationError>;
//# sourceMappingURL=githubsetupstateresponse.d.ts.map
import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { OASInfo, OASInfo$Outbound } from "./oasinfo.js";
import { OASOperation, OASOperation$Outbound } from "./oasoperation.js";
export type OASSummary = {
    info: OASInfo;
    operations: Array<OASOperation>;
};
/** @internal */
export declare const OASSummary$inboundSchema: z.ZodType<OASSummary, z.ZodTypeDef, unknown>;
/** @internal */
export type OASSummary$Outbound = {
    info: OASInfo$Outbound;
    operations: Array<OASOperation$Outbound>;
};
/** @internal */
export declare const OASSummary$outboundSchema: z.ZodType<OASSummary$Outbound, z.ZodTypeDef, OASSummary>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OASSummary$ {
    /** @deprecated use `OASSummary$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OASSummary, z.ZodTypeDef, unknown>;
    /** @deprecated use `OASSummary$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OASSummary$Outbound, z.ZodTypeDef, OASSummary>;
    /** @deprecated use `OASSummary$Outbound` instead. */
    type Outbound = OASSummary$Outbound;
}
export declare function oasSummaryToJSON(oasSummary: OASSummary): string;
export declare function oasSummaryFromJSON(jsonString: string): SafeParseResult<OASSummary, SDKValidationError>;
//# sourceMappingURL=oassummary.d.ts.map
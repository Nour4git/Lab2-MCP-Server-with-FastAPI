import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * A valid response containing MISSING publishing secret keys for a github target
 */
export type GithubMissingPublishingSecretsResponse = {
    missingSecrets?: Array<string> | undefined;
};
/** @internal */
export declare const GithubMissingPublishingSecretsResponse$inboundSchema: z.ZodType<GithubMissingPublishingSecretsResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type GithubMissingPublishingSecretsResponse$Outbound = {
    missing_secrets?: Array<string> | undefined;
};
/** @internal */
export declare const GithubMissingPublishingSecretsResponse$outboundSchema: z.ZodType<GithubMissingPublishingSecretsResponse$Outbound, z.ZodTypeDef, GithubMissingPublishingSecretsResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GithubMissingPublishingSecretsResponse$ {
    /** @deprecated use `GithubMissingPublishingSecretsResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GithubMissingPublishingSecretsResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `GithubMissingPublishingSecretsResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GithubMissingPublishingSecretsResponse$Outbound, z.ZodTypeDef, GithubMissingPublishingSecretsResponse>;
    /** @deprecated use `GithubMissingPublishingSecretsResponse$Outbound` instead. */
    type Outbound = GithubMissingPublishingSecretsResponse$Outbound;
}
export declare function githubMissingPublishingSecretsResponseToJSON(githubMissingPublishingSecretsResponse: GithubMissingPublishingSecretsResponse): string;
export declare function githubMissingPublishingSecretsResponseFromJSON(jsonString: string): SafeParseResult<GithubMissingPublishingSecretsResponse, SDKValidationError>;
//# sourceMappingURL=githubmissingpublishingsecretsresponse.d.ts.map
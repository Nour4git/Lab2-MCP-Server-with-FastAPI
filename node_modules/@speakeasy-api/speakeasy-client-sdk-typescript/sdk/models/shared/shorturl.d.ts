import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type ShortURL = {
    fullUrl: string;
    shortUrl: string;
};
/** @internal */
export declare const ShortURL$inboundSchema: z.ZodType<ShortURL, z.ZodTypeDef, unknown>;
/** @internal */
export type ShortURL$Outbound = {
    full_url: string;
    short_url: string;
};
/** @internal */
export declare const ShortURL$outboundSchema: z.ZodType<ShortURL$Outbound, z.ZodTypeDef, ShortURL>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ShortURL$ {
    /** @deprecated use `ShortURL$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ShortURL, z.ZodTypeDef, unknown>;
    /** @deprecated use `ShortURL$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ShortURL$Outbound, z.ZodTypeDef, ShortURL>;
    /** @deprecated use `ShortURL$Outbound` instead. */
    type Outbound = ShortURL$Outbound;
}
export declare function shortURLToJSON(shortURL: ShortURL): string;
export declare function shortURLFromJSON(jsonString: string): SafeParseResult<ShortURL, SDKValidationError>;
//# sourceMappingURL=shorturl.d.ts.map
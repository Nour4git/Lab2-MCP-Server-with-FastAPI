"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SuggestRequestBody$ = exports.SuggestRequestBody$outboundSchema = exports.SuggestRequestBody$inboundSchema = exports.SuggestRequestBodySuggestionType$ = exports.SuggestRequestBodySuggestionType$outboundSchema = exports.SuggestRequestBodySuggestionType$inboundSchema = exports.SuggestRequestBodySuggestionType = void 0;
exports.suggestRequestBodyToJSON = suggestRequestBodyToJSON;
exports.suggestRequestBodyFromJSON = suggestRequestBodyFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
const diagnostic_js_1 = require("./diagnostic.js");
const oassummary_js_1 = require("./oassummary.js");
exports.SuggestRequestBodySuggestionType = {
    MethodNames: "method-names",
    DiagnosticsOnly: "diagnostics-only",
};
/** @internal */
exports.SuggestRequestBodySuggestionType$inboundSchema = z.nativeEnum(exports.SuggestRequestBodySuggestionType);
/** @internal */
exports.SuggestRequestBodySuggestionType$outboundSchema = exports.SuggestRequestBodySuggestionType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SuggestRequestBodySuggestionType$;
(function (SuggestRequestBodySuggestionType$) {
    /** @deprecated use `SuggestRequestBodySuggestionType$inboundSchema` instead. */
    SuggestRequestBodySuggestionType$.inboundSchema = exports.SuggestRequestBodySuggestionType$inboundSchema;
    /** @deprecated use `SuggestRequestBodySuggestionType$outboundSchema` instead. */
    SuggestRequestBodySuggestionType$.outboundSchema = exports.SuggestRequestBodySuggestionType$outboundSchema;
})(SuggestRequestBodySuggestionType$ || (exports.SuggestRequestBodySuggestionType$ = SuggestRequestBodySuggestionType$ = {}));
/** @internal */
exports.SuggestRequestBody$inboundSchema = z.object({
    diagnostics: z.array(diagnostic_js_1.Diagnostic$inboundSchema),
    oas_summary: oassummary_js_1.OASSummary$inboundSchema,
    suggestion_type: exports.SuggestRequestBodySuggestionType$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "oas_summary": "oasSummary",
        "suggestion_type": "suggestionType",
    });
});
/** @internal */
exports.SuggestRequestBody$outboundSchema = z.object({
    diagnostics: z.array(diagnostic_js_1.Diagnostic$outboundSchema),
    oasSummary: oassummary_js_1.OASSummary$outboundSchema,
    suggestionType: exports.SuggestRequestBodySuggestionType$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        oasSummary: "oas_summary",
        suggestionType: "suggestion_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SuggestRequestBody$;
(function (SuggestRequestBody$) {
    /** @deprecated use `SuggestRequestBody$inboundSchema` instead. */
    SuggestRequestBody$.inboundSchema = exports.SuggestRequestBody$inboundSchema;
    /** @deprecated use `SuggestRequestBody$outboundSchema` instead. */
    SuggestRequestBody$.outboundSchema = exports.SuggestRequestBody$outboundSchema;
})(SuggestRequestBody$ || (exports.SuggestRequestBody$ = SuggestRequestBody$ = {}));
function suggestRequestBodyToJSON(suggestRequestBody) {
    return JSON.stringify(exports.SuggestRequestBody$outboundSchema.parse(suggestRequestBody));
}
function suggestRequestBodyFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.SuggestRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SuggestRequestBody' from JSON`);
}
//# sourceMappingURL=suggestrequestbody.js.map
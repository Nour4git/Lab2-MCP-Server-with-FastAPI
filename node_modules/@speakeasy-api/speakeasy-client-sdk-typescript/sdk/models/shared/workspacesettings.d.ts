import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type WorkspaceSettings = {
    createdAt: Date;
    updatedAt: Date;
    webhookUrl: string;
    workspaceId: string;
};
/** @internal */
export declare const WorkspaceSettings$inboundSchema: z.ZodType<WorkspaceSettings, z.ZodTypeDef, unknown>;
/** @internal */
export type WorkspaceSettings$Outbound = {
    created_at: string;
    updated_at: string;
    webhook_url: string;
    workspace_id: string;
};
/** @internal */
export declare const WorkspaceSettings$outboundSchema: z.ZodType<WorkspaceSettings$Outbound, z.ZodTypeDef, WorkspaceSettings>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WorkspaceSettings$ {
    /** @deprecated use `WorkspaceSettings$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WorkspaceSettings, z.ZodTypeDef, unknown>;
    /** @deprecated use `WorkspaceSettings$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WorkspaceSettings$Outbound, z.ZodTypeDef, WorkspaceSettings>;
    /** @deprecated use `WorkspaceSettings$Outbound` instead. */
    type Outbound = WorkspaceSettings$Outbound;
}
export declare function workspaceSettingsToJSON(workspaceSettings: WorkspaceSettings): string;
export declare function workspaceSettingsFromJSON(jsonString: string): SafeParseResult<WorkspaceSettings, SDKValidationError>;
//# sourceMappingURL=workspacesettings.d.ts.map
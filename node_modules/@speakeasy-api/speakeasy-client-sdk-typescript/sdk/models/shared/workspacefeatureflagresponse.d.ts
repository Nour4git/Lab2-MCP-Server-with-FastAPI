import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { FeatureFlag, FeatureFlag$Outbound } from "./featureflag.js";
/**
 * Workspace feature flag response
 */
export type WorkspaceFeatureFlagResponse = {
    featureFlags?: Array<FeatureFlag> | undefined;
};
/** @internal */
export declare const WorkspaceFeatureFlagResponse$inboundSchema: z.ZodType<WorkspaceFeatureFlagResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type WorkspaceFeatureFlagResponse$Outbound = {
    feature_flags?: Array<FeatureFlag$Outbound> | undefined;
};
/** @internal */
export declare const WorkspaceFeatureFlagResponse$outboundSchema: z.ZodType<WorkspaceFeatureFlagResponse$Outbound, z.ZodTypeDef, WorkspaceFeatureFlagResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WorkspaceFeatureFlagResponse$ {
    /** @deprecated use `WorkspaceFeatureFlagResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WorkspaceFeatureFlagResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `WorkspaceFeatureFlagResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WorkspaceFeatureFlagResponse$Outbound, z.ZodTypeDef, WorkspaceFeatureFlagResponse>;
    /** @deprecated use `WorkspaceFeatureFlagResponse$Outbound` instead. */
    type Outbound = WorkspaceFeatureFlagResponse$Outbound;
}
export declare function workspaceFeatureFlagResponseToJSON(workspaceFeatureFlagResponse: WorkspaceFeatureFlagResponse): string;
export declare function workspaceFeatureFlagResponseFromJSON(jsonString: string): SafeParseResult<WorkspaceFeatureFlagResponse, SDKValidationError>;
//# sourceMappingURL=workspacefeatureflagresponse.d.ts.map
"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PublishingToken$ = exports.PublishingToken$outboundSchema = exports.PublishingToken$inboundSchema = exports.TargetResource$ = exports.TargetResource$outboundSchema = exports.TargetResource$inboundSchema = exports.TargetResource = void 0;
exports.publishingTokenToJSON = publishingTokenToJSON;
exports.publishingTokenFromJSON = publishingTokenFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
exports.TargetResource = {
    Document: "document",
};
/** @internal */
exports.TargetResource$inboundSchema = z.nativeEnum(exports.TargetResource);
/** @internal */
exports.TargetResource$outboundSchema = exports.TargetResource$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TargetResource$;
(function (TargetResource$) {
    /** @deprecated use `TargetResource$inboundSchema` instead. */
    TargetResource$.inboundSchema = exports.TargetResource$inboundSchema;
    /** @deprecated use `TargetResource$outboundSchema` instead. */
    TargetResource$.outboundSchema = exports.TargetResource$outboundSchema;
})(TargetResource$ || (exports.TargetResource$ = TargetResource$ = {}));
/** @internal */
exports.PublishingToken$inboundSchema = z.object({
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    created_by: z.string(),
    id: z.string(),
    organization_id: z.string(),
    target_id: z.string(),
    target_resource: exports.TargetResource$inboundSchema,
    token: z.string(),
    token_name: z.string(),
    updated_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
        .optional(),
    updated_by: z.string().optional(),
    valid_until: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    workspace_id: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "created_at": "createdAt",
        "created_by": "createdBy",
        "organization_id": "organizationId",
        "target_id": "targetId",
        "target_resource": "targetResource",
        "token_name": "tokenName",
        "updated_at": "updatedAt",
        "updated_by": "updatedBy",
        "valid_until": "validUntil",
        "workspace_id": "workspaceId",
    });
});
/** @internal */
exports.PublishingToken$outboundSchema = z.object({
    createdAt: z.date().transform(v => v.toISOString()),
    createdBy: z.string(),
    id: z.string(),
    organizationId: z.string(),
    targetId: z.string(),
    targetResource: exports.TargetResource$outboundSchema,
    token: z.string(),
    tokenName: z.string(),
    updatedAt: z.date().transform(v => v.toISOString()).optional(),
    updatedBy: z.string().optional(),
    validUntil: z.date().transform(v => v.toISOString()),
    workspaceId: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        createdAt: "created_at",
        createdBy: "created_by",
        organizationId: "organization_id",
        targetId: "target_id",
        targetResource: "target_resource",
        tokenName: "token_name",
        updatedAt: "updated_at",
        updatedBy: "updated_by",
        validUntil: "valid_until",
        workspaceId: "workspace_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PublishingToken$;
(function (PublishingToken$) {
    /** @deprecated use `PublishingToken$inboundSchema` instead. */
    PublishingToken$.inboundSchema = exports.PublishingToken$inboundSchema;
    /** @deprecated use `PublishingToken$outboundSchema` instead. */
    PublishingToken$.outboundSchema = exports.PublishingToken$outboundSchema;
})(PublishingToken$ || (exports.PublishingToken$ = PublishingToken$ = {}));
function publishingTokenToJSON(publishingToken) {
    return JSON.stringify(exports.PublishingToken$outboundSchema.parse(publishingToken));
}
function publishingTokenFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.PublishingToken$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PublishingToken' from JSON`);
}
//# sourceMappingURL=publishingtoken.js.map
"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationUsage$ = exports.OrganizationUsage$outboundSchema = exports.OrganizationUsage$inboundSchema = void 0;
exports.organizationUsageToJSON = organizationUsageToJSON;
exports.organizationUsageFromJSON = organizationUsageFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.OrganizationUsage$inboundSchema = z.object({
    accessible: z.boolean(),
    accessible_features: z.array(z.string()),
    gen_lock_ids: z.array(z.string()),
    language: z.string(),
    max_operations: z.number().int(),
    number_of_operations: z.number().int(),
    used_features: z.array(z.string()),
    workspaces: z.array(z.string()),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "accessible_features": "accessibleFeatures",
        "gen_lock_ids": "genLockIds",
        "max_operations": "maxOperations",
        "number_of_operations": "numberOfOperations",
        "used_features": "usedFeatures",
    });
});
/** @internal */
exports.OrganizationUsage$outboundSchema = z.object({
    accessible: z.boolean(),
    accessibleFeatures: z.array(z.string()),
    genLockIds: z.array(z.string()),
    language: z.string(),
    maxOperations: z.number().int(),
    numberOfOperations: z.number().int(),
    usedFeatures: z.array(z.string()),
    workspaces: z.array(z.string()),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accessibleFeatures: "accessible_features",
        genLockIds: "gen_lock_ids",
        maxOperations: "max_operations",
        numberOfOperations: "number_of_operations",
        usedFeatures: "used_features",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrganizationUsage$;
(function (OrganizationUsage$) {
    /** @deprecated use `OrganizationUsage$inboundSchema` instead. */
    OrganizationUsage$.inboundSchema = exports.OrganizationUsage$inboundSchema;
    /** @deprecated use `OrganizationUsage$outboundSchema` instead. */
    OrganizationUsage$.outboundSchema = exports.OrganizationUsage$outboundSchema;
})(OrganizationUsage$ || (exports.OrganizationUsage$ = OrganizationUsage$ = {}));
function organizationUsageToJSON(organizationUsage) {
    return JSON.stringify(exports.OrganizationUsage$outboundSchema.parse(organizationUsage));
}
function organizationUsageFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.OrganizationUsage$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrganizationUsage' from JSON`);
}
//# sourceMappingURL=organizationusage.js.map
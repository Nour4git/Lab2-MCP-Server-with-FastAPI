import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type Relationship = {
    userId: string;
    workspaceId: string;
};
/**
 * A response for workspace user invite
 */
export type WorkspaceInviteResponse = {
    inviteLink?: string | null | undefined;
    relationship: Relationship;
};
/** @internal */
export declare const Relationship$inboundSchema: z.ZodType<Relationship, z.ZodTypeDef, unknown>;
/** @internal */
export type Relationship$Outbound = {
    user_id: string;
    workspace_id: string;
};
/** @internal */
export declare const Relationship$outboundSchema: z.ZodType<Relationship$Outbound, z.ZodTypeDef, Relationship>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Relationship$ {
    /** @deprecated use `Relationship$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Relationship, z.ZodTypeDef, unknown>;
    /** @deprecated use `Relationship$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Relationship$Outbound, z.ZodTypeDef, Relationship>;
    /** @deprecated use `Relationship$Outbound` instead. */
    type Outbound = Relationship$Outbound;
}
export declare function relationshipToJSON(relationship: Relationship): string;
export declare function relationshipFromJSON(jsonString: string): SafeParseResult<Relationship, SDKValidationError>;
/** @internal */
export declare const WorkspaceInviteResponse$inboundSchema: z.ZodType<WorkspaceInviteResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type WorkspaceInviteResponse$Outbound = {
    invite_link?: string | null | undefined;
    relationship: Relationship$Outbound;
};
/** @internal */
export declare const WorkspaceInviteResponse$outboundSchema: z.ZodType<WorkspaceInviteResponse$Outbound, z.ZodTypeDef, WorkspaceInviteResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WorkspaceInviteResponse$ {
    /** @deprecated use `WorkspaceInviteResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WorkspaceInviteResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `WorkspaceInviteResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WorkspaceInviteResponse$Outbound, z.ZodTypeDef, WorkspaceInviteResponse>;
    /** @deprecated use `WorkspaceInviteResponse$Outbound` instead. */
    type Outbound = WorkspaceInviteResponse$Outbound;
}
export declare function workspaceInviteResponseToJSON(workspaceInviteResponse: WorkspaceInviteResponse): string;
export declare function workspaceInviteResponseFromJSON(jsonString: string): SafeParseResult<WorkspaceInviteResponse, SDKValidationError>;
//# sourceMappingURL=workspaceinviteresponse.d.ts.map
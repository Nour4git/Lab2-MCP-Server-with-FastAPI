import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { BillingAddOn } from "./billingaddon.js";
/**
 * A request to add billing add ons
 */
export type OrganizationBillingAddOnRequest = {
    addOns: Array<BillingAddOn>;
};
/** @internal */
export declare const OrganizationBillingAddOnRequest$inboundSchema: z.ZodType<OrganizationBillingAddOnRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type OrganizationBillingAddOnRequest$Outbound = {
    add_ons: Array<string>;
};
/** @internal */
export declare const OrganizationBillingAddOnRequest$outboundSchema: z.ZodType<OrganizationBillingAddOnRequest$Outbound, z.ZodTypeDef, OrganizationBillingAddOnRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrganizationBillingAddOnRequest$ {
    /** @deprecated use `OrganizationBillingAddOnRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrganizationBillingAddOnRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrganizationBillingAddOnRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrganizationBillingAddOnRequest$Outbound, z.ZodTypeDef, OrganizationBillingAddOnRequest>;
    /** @deprecated use `OrganizationBillingAddOnRequest$Outbound` instead. */
    type Outbound = OrganizationBillingAddOnRequest$Outbound;
}
export declare function organizationBillingAddOnRequestToJSON(organizationBillingAddOnRequest: OrganizationBillingAddOnRequest): string;
export declare function organizationBillingAddOnRequestFromJSON(jsonString: string): SafeParseResult<OrganizationBillingAddOnRequest, SDKValidationError>;
//# sourceMappingURL=organizationbillingaddonrequest.d.ts.map
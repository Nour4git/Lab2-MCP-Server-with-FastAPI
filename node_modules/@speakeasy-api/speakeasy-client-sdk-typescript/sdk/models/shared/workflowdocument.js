"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowDocument$ = exports.WorkflowDocument$outboundSchema = exports.WorkflowDocument$inboundSchema = exports.Auth$ = exports.Auth$outboundSchema = exports.Auth$inboundSchema = void 0;
exports.authToJSON = authToJSON;
exports.authFromJSON = authFromJSON;
exports.workflowDocumentToJSON = workflowDocumentToJSON;
exports.workflowDocumentFromJSON = workflowDocumentFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.Auth$inboundSchema = z
    .object({
    header: z.string(),
    secret: z.string(),
});
/** @internal */
exports.Auth$outboundSchema = z.object({
    header: z.string(),
    secret: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Auth$;
(function (Auth$) {
    /** @deprecated use `Auth$inboundSchema` instead. */
    Auth$.inboundSchema = exports.Auth$inboundSchema;
    /** @deprecated use `Auth$outboundSchema` instead. */
    Auth$.outboundSchema = exports.Auth$outboundSchema;
})(Auth$ || (exports.Auth$ = Auth$ = {}));
function authToJSON(auth) {
    return JSON.stringify(exports.Auth$outboundSchema.parse(auth));
}
function authFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Auth$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Auth' from JSON`);
}
/** @internal */
exports.WorkflowDocument$inboundSchema = z.object({
    auth: z.lazy(() => exports.Auth$inboundSchema).optional(),
    location: z.string(),
});
/** @internal */
exports.WorkflowDocument$outboundSchema = z.object({
    auth: z.lazy(() => exports.Auth$outboundSchema).optional(),
    location: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WorkflowDocument$;
(function (WorkflowDocument$) {
    /** @deprecated use `WorkflowDocument$inboundSchema` instead. */
    WorkflowDocument$.inboundSchema = exports.WorkflowDocument$inboundSchema;
    /** @deprecated use `WorkflowDocument$outboundSchema` instead. */
    WorkflowDocument$.outboundSchema = exports.WorkflowDocument$outboundSchema;
})(WorkflowDocument$ || (exports.WorkflowDocument$ = WorkflowDocument$ = {}));
function workflowDocumentToJSON(workflowDocument) {
    return JSON.stringify(exports.WorkflowDocument$outboundSchema.parse(workflowDocument));
}
function workflowDocumentFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.WorkflowDocument$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WorkflowDocument' from JSON`);
}
//# sourceMappingURL=workflowdocument.js.map
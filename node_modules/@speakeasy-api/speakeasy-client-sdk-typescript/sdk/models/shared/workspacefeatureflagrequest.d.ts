import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { WorkspaceFeatureFlag } from "./workspacefeatureflag.js";
/**
 * A request to add workspace feature flags
 */
export type WorkspaceFeatureFlagRequest = {
    featureFlags: Array<WorkspaceFeatureFlag>;
};
/** @internal */
export declare const WorkspaceFeatureFlagRequest$inboundSchema: z.ZodType<WorkspaceFeatureFlagRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type WorkspaceFeatureFlagRequest$Outbound = {
    feature_flags: Array<string>;
};
/** @internal */
export declare const WorkspaceFeatureFlagRequest$outboundSchema: z.ZodType<WorkspaceFeatureFlagRequest$Outbound, z.ZodTypeDef, WorkspaceFeatureFlagRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WorkspaceFeatureFlagRequest$ {
    /** @deprecated use `WorkspaceFeatureFlagRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WorkspaceFeatureFlagRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `WorkspaceFeatureFlagRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WorkspaceFeatureFlagRequest$Outbound, z.ZodTypeDef, WorkspaceFeatureFlagRequest>;
    /** @deprecated use `WorkspaceFeatureFlagRequest$Outbound` instead. */
    type Outbound = WorkspaceFeatureFlagRequest$Outbound;
}
export declare function workspaceFeatureFlagRequestToJSON(workspaceFeatureFlagRequest: WorkspaceFeatureFlagRequest): string;
export declare function workspaceFeatureFlagRequestFromJSON(jsonString: string): SafeParseResult<WorkspaceFeatureFlagRequest, SDKValidationError>;
//# sourceMappingURL=workspacefeatureflagrequest.d.ts.map
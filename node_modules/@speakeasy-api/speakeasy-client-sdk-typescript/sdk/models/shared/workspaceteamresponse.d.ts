import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { SSOMetadata, SSOMetadata$Outbound } from "./ssometadata.js";
import { User, User$Outbound } from "./user.js";
/**
 * Workspace team response
 */
export type WorkspaceTeamResponse = {
    /**
     * SSO metadata for a workspace
     */
    ssoMetadata?: SSOMetadata | undefined;
    users: Array<User>;
};
/** @internal */
export declare const WorkspaceTeamResponse$inboundSchema: z.ZodType<WorkspaceTeamResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type WorkspaceTeamResponse$Outbound = {
    sso_metadata?: SSOMetadata$Outbound | undefined;
    users: Array<User$Outbound>;
};
/** @internal */
export declare const WorkspaceTeamResponse$outboundSchema: z.ZodType<WorkspaceTeamResponse$Outbound, z.ZodTypeDef, WorkspaceTeamResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WorkspaceTeamResponse$ {
    /** @deprecated use `WorkspaceTeamResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WorkspaceTeamResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `WorkspaceTeamResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WorkspaceTeamResponse$Outbound, z.ZodTypeDef, WorkspaceTeamResponse>;
    /** @deprecated use `WorkspaceTeamResponse$Outbound` instead. */
    type Outbound = WorkspaceTeamResponse$Outbound;
}
export declare function workspaceTeamResponseToJSON(workspaceTeamResponse: WorkspaceTeamResponse): string;
export declare function workspaceTeamResponseFromJSON(jsonString: string): SafeParseResult<WorkspaceTeamResponse, SDKValidationError>;
//# sourceMappingURL=workspaceteamresponse.d.ts.map
import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { Diagnostic, Diagnostic$Outbound } from "./diagnostic.js";
import { OASSummary, OASSummary$Outbound } from "./oassummary.js";
export declare const SuggestRequestBodySuggestionType: {
    readonly MethodNames: "method-names";
    readonly DiagnosticsOnly: "diagnostics-only";
};
export type SuggestRequestBodySuggestionType = ClosedEnum<typeof SuggestRequestBodySuggestionType>;
export type SuggestRequestBody = {
    diagnostics: Array<Diagnostic>;
    oasSummary: OASSummary;
    suggestionType: SuggestRequestBodySuggestionType;
};
/** @internal */
export declare const SuggestRequestBodySuggestionType$inboundSchema: z.ZodNativeEnum<typeof SuggestRequestBodySuggestionType>;
/** @internal */
export declare const SuggestRequestBodySuggestionType$outboundSchema: z.ZodNativeEnum<typeof SuggestRequestBodySuggestionType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace SuggestRequestBodySuggestionType$ {
    /** @deprecated use `SuggestRequestBodySuggestionType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly MethodNames: "method-names";
        readonly DiagnosticsOnly: "diagnostics-only";
    }>;
    /** @deprecated use `SuggestRequestBodySuggestionType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly MethodNames: "method-names";
        readonly DiagnosticsOnly: "diagnostics-only";
    }>;
}
/** @internal */
export declare const SuggestRequestBody$inboundSchema: z.ZodType<SuggestRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type SuggestRequestBody$Outbound = {
    diagnostics: Array<Diagnostic$Outbound>;
    oas_summary: OASSummary$Outbound;
    suggestion_type: string;
};
/** @internal */
export declare const SuggestRequestBody$outboundSchema: z.ZodType<SuggestRequestBody$Outbound, z.ZodTypeDef, SuggestRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace SuggestRequestBody$ {
    /** @deprecated use `SuggestRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<SuggestRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `SuggestRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<SuggestRequestBody$Outbound, z.ZodTypeDef, SuggestRequestBody>;
    /** @deprecated use `SuggestRequestBody$Outbound` instead. */
    type Outbound = SuggestRequestBody$Outbound;
}
export declare function suggestRequestBodyToJSON(suggestRequestBody: SuggestRequestBody): string;
export declare function suggestRequestBodyFromJSON(jsonString: string): SafeParseResult<SuggestRequestBody, SDKValidationError>;
//# sourceMappingURL=suggestrequestbody.d.ts.map
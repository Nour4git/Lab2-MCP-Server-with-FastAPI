import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * A request to trigger an action on a GitHub target
 */
export type GithubTriggerActionRequest = {
    /**
     * Force an SDK generation
     */
    force?: boolean | undefined;
    /**
     * The generation lock ID
     */
    genLockId: string;
    /**
     * The GitHub organization name
     */
    org: string;
    /**
     * The GitHub repository name
     */
    repoName: string;
    /**
     * A version to override the SDK too in workflow dispatch
     */
    setVersion?: string | undefined;
    /**
     * The target name for the action
     */
    targetName?: string | undefined;
};
/** @internal */
export declare const GithubTriggerActionRequest$inboundSchema: z.ZodType<GithubTriggerActionRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GithubTriggerActionRequest$Outbound = {
    force?: boolean | undefined;
    gen_lock_id: string;
    org: string;
    repo_name: string;
    set_version?: string | undefined;
    target_name?: string | undefined;
};
/** @internal */
export declare const GithubTriggerActionRequest$outboundSchema: z.ZodType<GithubTriggerActionRequest$Outbound, z.ZodTypeDef, GithubTriggerActionRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GithubTriggerActionRequest$ {
    /** @deprecated use `GithubTriggerActionRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GithubTriggerActionRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GithubTriggerActionRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GithubTriggerActionRequest$Outbound, z.ZodTypeDef, GithubTriggerActionRequest>;
    /** @deprecated use `GithubTriggerActionRequest$Outbound` instead. */
    type Outbound = GithubTriggerActionRequest$Outbound;
}
export declare function githubTriggerActionRequestToJSON(githubTriggerActionRequest: GithubTriggerActionRequest): string;
export declare function githubTriggerActionRequestFromJSON(jsonString: string): SafeParseResult<GithubTriggerActionRequest, SDKValidationError>;
//# sourceMappingURL=githubtriggeractionrequest.d.ts.map
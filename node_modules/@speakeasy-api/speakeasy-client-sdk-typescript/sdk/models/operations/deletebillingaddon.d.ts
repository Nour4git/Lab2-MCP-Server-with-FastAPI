import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
export type DeleteBillingAddOnRequest = {
    /**
     * The specific add-on to delete.
     */
    addOn: shared.BillingAddOn;
};
/** @internal */
export declare const DeleteBillingAddOnRequest$inboundSchema: z.ZodType<DeleteBillingAddOnRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteBillingAddOnRequest$Outbound = {
    add_on: string;
};
/** @internal */
export declare const DeleteBillingAddOnRequest$outboundSchema: z.ZodType<DeleteBillingAddOnRequest$Outbound, z.ZodTypeDef, DeleteBillingAddOnRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteBillingAddOnRequest$ {
    /** @deprecated use `DeleteBillingAddOnRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteBillingAddOnRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteBillingAddOnRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteBillingAddOnRequest$Outbound, z.ZodTypeDef, DeleteBillingAddOnRequest>;
    /** @deprecated use `DeleteBillingAddOnRequest$Outbound` instead. */
    type Outbound = DeleteBillingAddOnRequest$Outbound;
}
export declare function deleteBillingAddOnRequestToJSON(deleteBillingAddOnRequest: DeleteBillingAddOnRequest): string;
export declare function deleteBillingAddOnRequestFromJSON(jsonString: string): SafeParseResult<DeleteBillingAddOnRequest, SDKValidationError>;
//# sourceMappingURL=deletebillingaddon.d.ts.map
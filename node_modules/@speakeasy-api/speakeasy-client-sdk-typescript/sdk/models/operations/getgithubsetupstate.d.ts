import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetGithubSetupStateRequest = {
    org: string;
    repo: string;
    generateGenLockId: string;
};
/** @internal */
export declare const GetGithubSetupStateRequest$inboundSchema: z.ZodType<GetGithubSetupStateRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetGithubSetupStateRequest$Outbound = {
    org: string;
    repo: string;
    generate_gen_lock_id: string;
};
/** @internal */
export declare const GetGithubSetupStateRequest$outboundSchema: z.ZodType<GetGithubSetupStateRequest$Outbound, z.ZodTypeDef, GetGithubSetupStateRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetGithubSetupStateRequest$ {
    /** @deprecated use `GetGithubSetupStateRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetGithubSetupStateRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetGithubSetupStateRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetGithubSetupStateRequest$Outbound, z.ZodTypeDef, GetGithubSetupStateRequest>;
    /** @deprecated use `GetGithubSetupStateRequest$Outbound` instead. */
    type Outbound = GetGithubSetupStateRequest$Outbound;
}
export declare function getGithubSetupStateRequestToJSON(getGithubSetupStateRequest: GetGithubSetupStateRequest): string;
export declare function getGithubSetupStateRequestFromJSON(jsonString: string): SafeParseResult<GetGithubSetupStateRequest, SDKValidationError>;
//# sourceMappingURL=getgithubsetupstate.d.ts.map
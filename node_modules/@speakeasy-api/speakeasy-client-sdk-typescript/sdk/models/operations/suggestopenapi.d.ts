import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
export type Schema = {
    content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
    fileName: string;
};
/**
 * The schema file to upload provided as a multipart/form-data file segment.
 */
export type SuggestOpenAPIRequestBody = {
    opts?: shared.SuggestOptsOld | undefined;
    schema: Schema | Blob;
};
export type SuggestOpenAPIRequest = {
    xSessionId: string;
    /**
     * The schema file to upload provided as a multipart/form-data file segment.
     */
    requestBody: SuggestOpenAPIRequestBody;
};
/** @internal */
export declare const Schema$inboundSchema: z.ZodType<Schema, z.ZodTypeDef, unknown>;
/** @internal */
export type Schema$Outbound = {
    content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
    fileName: string;
};
/** @internal */
export declare const Schema$outboundSchema: z.ZodType<Schema$Outbound, z.ZodTypeDef, Schema>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Schema$ {
    /** @deprecated use `Schema$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Schema, z.ZodTypeDef, unknown>;
    /** @deprecated use `Schema$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Schema$Outbound, z.ZodTypeDef, Schema>;
    /** @deprecated use `Schema$Outbound` instead. */
    type Outbound = Schema$Outbound;
}
export declare function schemaToJSON(schema: Schema): string;
export declare function schemaFromJSON(jsonString: string): SafeParseResult<Schema, SDKValidationError>;
/** @internal */
export declare const SuggestOpenAPIRequestBody$inboundSchema: z.ZodType<SuggestOpenAPIRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type SuggestOpenAPIRequestBody$Outbound = {
    opts?: shared.SuggestOptsOld$Outbound | undefined;
    schema: Schema$Outbound | Blob;
};
/** @internal */
export declare const SuggestOpenAPIRequestBody$outboundSchema: z.ZodType<SuggestOpenAPIRequestBody$Outbound, z.ZodTypeDef, SuggestOpenAPIRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace SuggestOpenAPIRequestBody$ {
    /** @deprecated use `SuggestOpenAPIRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<SuggestOpenAPIRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `SuggestOpenAPIRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<SuggestOpenAPIRequestBody$Outbound, z.ZodTypeDef, SuggestOpenAPIRequestBody>;
    /** @deprecated use `SuggestOpenAPIRequestBody$Outbound` instead. */
    type Outbound = SuggestOpenAPIRequestBody$Outbound;
}
export declare function suggestOpenAPIRequestBodyToJSON(suggestOpenAPIRequestBody: SuggestOpenAPIRequestBody): string;
export declare function suggestOpenAPIRequestBodyFromJSON(jsonString: string): SafeParseResult<SuggestOpenAPIRequestBody, SDKValidationError>;
/** @internal */
export declare const SuggestOpenAPIRequest$inboundSchema: z.ZodType<SuggestOpenAPIRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type SuggestOpenAPIRequest$Outbound = {
    "x-session-id": string;
    RequestBody: SuggestOpenAPIRequestBody$Outbound;
};
/** @internal */
export declare const SuggestOpenAPIRequest$outboundSchema: z.ZodType<SuggestOpenAPIRequest$Outbound, z.ZodTypeDef, SuggestOpenAPIRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace SuggestOpenAPIRequest$ {
    /** @deprecated use `SuggestOpenAPIRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<SuggestOpenAPIRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `SuggestOpenAPIRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<SuggestOpenAPIRequest$Outbound, z.ZodTypeDef, SuggestOpenAPIRequest>;
    /** @deprecated use `SuggestOpenAPIRequest$Outbound` instead. */
    type Outbound = SuggestOpenAPIRequest$Outbound;
}
export declare function suggestOpenAPIRequestToJSON(suggestOpenAPIRequest: SuggestOpenAPIRequest): string;
export declare function suggestOpenAPIRequestFromJSON(jsonString: string): SafeParseResult<SuggestOpenAPIRequest, SDKValidationError>;
//# sourceMappingURL=suggestopenapi.d.ts.map
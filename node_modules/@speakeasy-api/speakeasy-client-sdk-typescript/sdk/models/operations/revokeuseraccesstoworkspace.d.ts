import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type RevokeUserAccessToWorkspaceGlobals = {
    workspaceId?: string | undefined;
};
export type RevokeUserAccessToWorkspaceRequest = {
    /**
     * Unique identifier of the workspace.
     */
    workspaceId?: string | undefined;
    /**
     * Unique identifier of the user.
     */
    userId: string;
};
/** @internal */
export declare const RevokeUserAccessToWorkspaceGlobals$inboundSchema: z.ZodType<RevokeUserAccessToWorkspaceGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type RevokeUserAccessToWorkspaceGlobals$Outbound = {
    workspace_id?: string | undefined;
};
/** @internal */
export declare const RevokeUserAccessToWorkspaceGlobals$outboundSchema: z.ZodType<RevokeUserAccessToWorkspaceGlobals$Outbound, z.ZodTypeDef, RevokeUserAccessToWorkspaceGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RevokeUserAccessToWorkspaceGlobals$ {
    /** @deprecated use `RevokeUserAccessToWorkspaceGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RevokeUserAccessToWorkspaceGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `RevokeUserAccessToWorkspaceGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RevokeUserAccessToWorkspaceGlobals$Outbound, z.ZodTypeDef, RevokeUserAccessToWorkspaceGlobals>;
    /** @deprecated use `RevokeUserAccessToWorkspaceGlobals$Outbound` instead. */
    type Outbound = RevokeUserAccessToWorkspaceGlobals$Outbound;
}
export declare function revokeUserAccessToWorkspaceGlobalsToJSON(revokeUserAccessToWorkspaceGlobals: RevokeUserAccessToWorkspaceGlobals): string;
export declare function revokeUserAccessToWorkspaceGlobalsFromJSON(jsonString: string): SafeParseResult<RevokeUserAccessToWorkspaceGlobals, SDKValidationError>;
/** @internal */
export declare const RevokeUserAccessToWorkspaceRequest$inboundSchema: z.ZodType<RevokeUserAccessToWorkspaceRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type RevokeUserAccessToWorkspaceRequest$Outbound = {
    workspace_id?: string | undefined;
    userId: string;
};
/** @internal */
export declare const RevokeUserAccessToWorkspaceRequest$outboundSchema: z.ZodType<RevokeUserAccessToWorkspaceRequest$Outbound, z.ZodTypeDef, RevokeUserAccessToWorkspaceRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RevokeUserAccessToWorkspaceRequest$ {
    /** @deprecated use `RevokeUserAccessToWorkspaceRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RevokeUserAccessToWorkspaceRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `RevokeUserAccessToWorkspaceRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RevokeUserAccessToWorkspaceRequest$Outbound, z.ZodTypeDef, RevokeUserAccessToWorkspaceRequest>;
    /** @deprecated use `RevokeUserAccessToWorkspaceRequest$Outbound` instead. */
    type Outbound = RevokeUserAccessToWorkspaceRequest$Outbound;
}
export declare function revokeUserAccessToWorkspaceRequestToJSON(revokeUserAccessToWorkspaceRequest: RevokeUserAccessToWorkspaceRequest): string;
export declare function revokeUserAccessToWorkspaceRequestFromJSON(jsonString: string): SafeParseResult<RevokeUserAccessToWorkspaceRequest, SDKValidationError>;
//# sourceMappingURL=revokeuseraccesstoworkspace.d.ts.map
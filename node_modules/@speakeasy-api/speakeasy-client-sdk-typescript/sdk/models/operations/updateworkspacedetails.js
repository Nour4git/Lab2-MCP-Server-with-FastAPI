"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateWorkspaceDetailsRequest$ = exports.UpdateWorkspaceDetailsRequest$outboundSchema = exports.UpdateWorkspaceDetailsRequest$inboundSchema = exports.UpdateWorkspaceDetailsGlobals$ = exports.UpdateWorkspaceDetailsGlobals$outboundSchema = exports.UpdateWorkspaceDetailsGlobals$inboundSchema = void 0;
exports.updateWorkspaceDetailsGlobalsToJSON = updateWorkspaceDetailsGlobalsToJSON;
exports.updateWorkspaceDetailsGlobalsFromJSON = updateWorkspaceDetailsGlobalsFromJSON;
exports.updateWorkspaceDetailsRequestToJSON = updateWorkspaceDetailsRequestToJSON;
exports.updateWorkspaceDetailsRequestFromJSON = updateWorkspaceDetailsRequestFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
const shared = __importStar(require("../shared/index.js"));
/** @internal */
exports.UpdateWorkspaceDetailsGlobals$inboundSchema = z.object({
    workspace_id: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workspace_id": "workspaceId",
    });
});
/** @internal */
exports.UpdateWorkspaceDetailsGlobals$outboundSchema = z.object({
    workspaceId: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workspaceId: "workspace_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UpdateWorkspaceDetailsGlobals$;
(function (UpdateWorkspaceDetailsGlobals$) {
    /** @deprecated use `UpdateWorkspaceDetailsGlobals$inboundSchema` instead. */
    UpdateWorkspaceDetailsGlobals$.inboundSchema = exports.UpdateWorkspaceDetailsGlobals$inboundSchema;
    /** @deprecated use `UpdateWorkspaceDetailsGlobals$outboundSchema` instead. */
    UpdateWorkspaceDetailsGlobals$.outboundSchema = exports.UpdateWorkspaceDetailsGlobals$outboundSchema;
})(UpdateWorkspaceDetailsGlobals$ || (exports.UpdateWorkspaceDetailsGlobals$ = UpdateWorkspaceDetailsGlobals$ = {}));
function updateWorkspaceDetailsGlobalsToJSON(updateWorkspaceDetailsGlobals) {
    return JSON.stringify(exports.UpdateWorkspaceDetailsGlobals$outboundSchema.parse(updateWorkspaceDetailsGlobals));
}
function updateWorkspaceDetailsGlobalsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UpdateWorkspaceDetailsGlobals$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateWorkspaceDetailsGlobals' from JSON`);
}
/** @internal */
exports.UpdateWorkspaceDetailsRequest$inboundSchema = z.object({
    workspace_id: z.string().optional(),
    Workspace: shared.Workspace$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workspace_id": "workspaceId",
        "Workspace": "workspace",
    });
});
/** @internal */
exports.UpdateWorkspaceDetailsRequest$outboundSchema = z.object({
    workspaceId: z.string().optional(),
    workspace: shared.Workspace$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workspaceId: "workspace_id",
        workspace: "Workspace",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UpdateWorkspaceDetailsRequest$;
(function (UpdateWorkspaceDetailsRequest$) {
    /** @deprecated use `UpdateWorkspaceDetailsRequest$inboundSchema` instead. */
    UpdateWorkspaceDetailsRequest$.inboundSchema = exports.UpdateWorkspaceDetailsRequest$inboundSchema;
    /** @deprecated use `UpdateWorkspaceDetailsRequest$outboundSchema` instead. */
    UpdateWorkspaceDetailsRequest$.outboundSchema = exports.UpdateWorkspaceDetailsRequest$outboundSchema;
})(UpdateWorkspaceDetailsRequest$ || (exports.UpdateWorkspaceDetailsRequest$ = UpdateWorkspaceDetailsRequest$ = {}));
function updateWorkspaceDetailsRequestToJSON(updateWorkspaceDetailsRequest) {
    return JSON.stringify(exports.UpdateWorkspaceDetailsRequest$outboundSchema.parse(updateWorkspaceDetailsRequest));
}
function updateWorkspaceDetailsRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UpdateWorkspaceDetailsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateWorkspaceDetailsRequest' from JSON`);
}
//# sourceMappingURL=updateworkspacedetails.js.map
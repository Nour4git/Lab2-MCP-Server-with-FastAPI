import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetPublishingTokenTargetByIDRequest = {
    /**
     * Unique identifier of the publishing token.
     */
    tokenID: string;
};
/** @internal */
export declare const GetPublishingTokenTargetByIDRequest$inboundSchema: z.ZodType<GetPublishingTokenTargetByIDRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetPublishingTokenTargetByIDRequest$Outbound = {
    tokenID: string;
};
/** @internal */
export declare const GetPublishingTokenTargetByIDRequest$outboundSchema: z.ZodType<GetPublishingTokenTargetByIDRequest$Outbound, z.ZodTypeDef, GetPublishingTokenTargetByIDRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetPublishingTokenTargetByIDRequest$ {
    /** @deprecated use `GetPublishingTokenTargetByIDRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetPublishingTokenTargetByIDRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetPublishingTokenTargetByIDRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetPublishingTokenTargetByIDRequest$Outbound, z.ZodTypeDef, GetPublishingTokenTargetByIDRequest>;
    /** @deprecated use `GetPublishingTokenTargetByIDRequest$Outbound` instead. */
    type Outbound = GetPublishingTokenTargetByIDRequest$Outbound;
}
export declare function getPublishingTokenTargetByIDRequestToJSON(getPublishingTokenTargetByIDRequest: GetPublishingTokenTargetByIDRequest): string;
export declare function getPublishingTokenTargetByIDRequestFromJSON(jsonString: string): SafeParseResult<GetPublishingTokenTargetByIDRequest, SDKValidationError>;
//# sourceMappingURL=getpublishingtokentargetbyid.d.ts.map
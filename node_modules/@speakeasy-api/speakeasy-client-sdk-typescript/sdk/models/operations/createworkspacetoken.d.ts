import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
export type CreateWorkspaceTokenGlobals = {
    workspaceId?: string | undefined;
};
export type CreateWorkspaceTokenRequest = {
    /**
     * Unique identifier of the workspace.
     */
    workspaceId?: string | undefined;
    workspaceToken: shared.WorkspaceToken;
};
/** @internal */
export declare const CreateWorkspaceTokenGlobals$inboundSchema: z.ZodType<CreateWorkspaceTokenGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateWorkspaceTokenGlobals$Outbound = {
    workspace_id?: string | undefined;
};
/** @internal */
export declare const CreateWorkspaceTokenGlobals$outboundSchema: z.ZodType<CreateWorkspaceTokenGlobals$Outbound, z.ZodTypeDef, CreateWorkspaceTokenGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateWorkspaceTokenGlobals$ {
    /** @deprecated use `CreateWorkspaceTokenGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateWorkspaceTokenGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateWorkspaceTokenGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateWorkspaceTokenGlobals$Outbound, z.ZodTypeDef, CreateWorkspaceTokenGlobals>;
    /** @deprecated use `CreateWorkspaceTokenGlobals$Outbound` instead. */
    type Outbound = CreateWorkspaceTokenGlobals$Outbound;
}
export declare function createWorkspaceTokenGlobalsToJSON(createWorkspaceTokenGlobals: CreateWorkspaceTokenGlobals): string;
export declare function createWorkspaceTokenGlobalsFromJSON(jsonString: string): SafeParseResult<CreateWorkspaceTokenGlobals, SDKValidationError>;
/** @internal */
export declare const CreateWorkspaceTokenRequest$inboundSchema: z.ZodType<CreateWorkspaceTokenRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateWorkspaceTokenRequest$Outbound = {
    workspace_id?: string | undefined;
    WorkspaceToken: shared.WorkspaceToken$Outbound;
};
/** @internal */
export declare const CreateWorkspaceTokenRequest$outboundSchema: z.ZodType<CreateWorkspaceTokenRequest$Outbound, z.ZodTypeDef, CreateWorkspaceTokenRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateWorkspaceTokenRequest$ {
    /** @deprecated use `CreateWorkspaceTokenRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateWorkspaceTokenRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateWorkspaceTokenRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateWorkspaceTokenRequest$Outbound, z.ZodTypeDef, CreateWorkspaceTokenRequest>;
    /** @deprecated use `CreateWorkspaceTokenRequest$Outbound` instead. */
    type Outbound = CreateWorkspaceTokenRequest$Outbound;
}
export declare function createWorkspaceTokenRequestToJSON(createWorkspaceTokenRequest: CreateWorkspaceTokenRequest): string;
export declare function createWorkspaceTokenRequestFromJSON(jsonString: string): SafeParseResult<CreateWorkspaceTokenRequest, SDKValidationError>;
//# sourceMappingURL=createworkspacetoken.d.ts.map
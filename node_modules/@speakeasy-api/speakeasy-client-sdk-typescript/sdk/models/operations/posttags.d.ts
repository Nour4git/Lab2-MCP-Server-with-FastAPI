import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
export type PostTagsRequest = {
    namespaceName: string;
    /**
     * A JSON representation of the tags to add
     */
    addTags?: shared.AddTags | undefined;
};
/** @internal */
export declare const PostTagsRequest$inboundSchema: z.ZodType<PostTagsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type PostTagsRequest$Outbound = {
    namespace_name: string;
    AddTags?: shared.AddTags$Outbound | undefined;
};
/** @internal */
export declare const PostTagsRequest$outboundSchema: z.ZodType<PostTagsRequest$Outbound, z.ZodTypeDef, PostTagsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PostTagsRequest$ {
    /** @deprecated use `PostTagsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PostTagsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `PostTagsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PostTagsRequest$Outbound, z.ZodTypeDef, PostTagsRequest>;
    /** @deprecated use `PostTagsRequest$Outbound` instead. */
    type Outbound = PostTagsRequest$Outbound;
}
export declare function postTagsRequestToJSON(postTagsRequest: PostTagsRequest): string;
export declare function postTagsRequestFromJSON(jsonString: string): SafeParseResult<PostTagsRequest, SDKValidationError>;
//# sourceMappingURL=posttags.d.ts.map
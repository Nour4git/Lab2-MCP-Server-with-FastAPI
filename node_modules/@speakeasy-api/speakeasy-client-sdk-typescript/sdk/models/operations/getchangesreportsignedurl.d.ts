import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetChangesReportSignedUrlRequest = {
    /**
     * The checksum of the document to retrieve the signed access url for.
     */
    documentChecksum: string;
};
/**
 * OK
 */
export type GetChangesReportSignedUrlSignedAccess = {
    url: string;
};
/** @internal */
export declare const GetChangesReportSignedUrlRequest$inboundSchema: z.ZodType<GetChangesReportSignedUrlRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetChangesReportSignedUrlRequest$Outbound = {
    documentChecksum: string;
};
/** @internal */
export declare const GetChangesReportSignedUrlRequest$outboundSchema: z.ZodType<GetChangesReportSignedUrlRequest$Outbound, z.ZodTypeDef, GetChangesReportSignedUrlRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetChangesReportSignedUrlRequest$ {
    /** @deprecated use `GetChangesReportSignedUrlRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetChangesReportSignedUrlRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetChangesReportSignedUrlRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetChangesReportSignedUrlRequest$Outbound, z.ZodTypeDef, GetChangesReportSignedUrlRequest>;
    /** @deprecated use `GetChangesReportSignedUrlRequest$Outbound` instead. */
    type Outbound = GetChangesReportSignedUrlRequest$Outbound;
}
export declare function getChangesReportSignedUrlRequestToJSON(getChangesReportSignedUrlRequest: GetChangesReportSignedUrlRequest): string;
export declare function getChangesReportSignedUrlRequestFromJSON(jsonString: string): SafeParseResult<GetChangesReportSignedUrlRequest, SDKValidationError>;
/** @internal */
export declare const GetChangesReportSignedUrlSignedAccess$inboundSchema: z.ZodType<GetChangesReportSignedUrlSignedAccess, z.ZodTypeDef, unknown>;
/** @internal */
export type GetChangesReportSignedUrlSignedAccess$Outbound = {
    url: string;
};
/** @internal */
export declare const GetChangesReportSignedUrlSignedAccess$outboundSchema: z.ZodType<GetChangesReportSignedUrlSignedAccess$Outbound, z.ZodTypeDef, GetChangesReportSignedUrlSignedAccess>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetChangesReportSignedUrlSignedAccess$ {
    /** @deprecated use `GetChangesReportSignedUrlSignedAccess$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetChangesReportSignedUrlSignedAccess, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetChangesReportSignedUrlSignedAccess$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetChangesReportSignedUrlSignedAccess$Outbound, z.ZodTypeDef, GetChangesReportSignedUrlSignedAccess>;
    /** @deprecated use `GetChangesReportSignedUrlSignedAccess$Outbound` instead. */
    type Outbound = GetChangesReportSignedUrlSignedAccess$Outbound;
}
export declare function getChangesReportSignedUrlSignedAccessToJSON(getChangesReportSignedUrlSignedAccess: GetChangesReportSignedUrlSignedAccess): string;
export declare function getChangesReportSignedUrlSignedAccessFromJSON(jsonString: string): SafeParseResult<GetChangesReportSignedUrlSignedAccess, SDKValidationError>;
//# sourceMappingURL=getchangesreportsignedurl.d.ts.map
import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GithubCheckPublishingSecretsRequest = {
    generateGenLockId: string;
};
/** @internal */
export declare const GithubCheckPublishingSecretsRequest$inboundSchema: z.ZodType<GithubCheckPublishingSecretsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GithubCheckPublishingSecretsRequest$Outbound = {
    generate_gen_lock_id: string;
};
/** @internal */
export declare const GithubCheckPublishingSecretsRequest$outboundSchema: z.ZodType<GithubCheckPublishingSecretsRequest$Outbound, z.ZodTypeDef, GithubCheckPublishingSecretsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GithubCheckPublishingSecretsRequest$ {
    /** @deprecated use `GithubCheckPublishingSecretsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GithubCheckPublishingSecretsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GithubCheckPublishingSecretsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GithubCheckPublishingSecretsRequest$Outbound, z.ZodTypeDef, GithubCheckPublishingSecretsRequest>;
    /** @deprecated use `GithubCheckPublishingSecretsRequest$Outbound` instead. */
    type Outbound = GithubCheckPublishingSecretsRequest$Outbound;
}
export declare function githubCheckPublishingSecretsRequestToJSON(githubCheckPublishingSecretsRequest: GithubCheckPublishingSecretsRequest): string;
export declare function githubCheckPublishingSecretsRequestFromJSON(jsonString: string): SafeParseResult<GithubCheckPublishingSecretsRequest, SDKValidationError>;
//# sourceMappingURL=githubcheckpublishingsecrets.d.ts.map
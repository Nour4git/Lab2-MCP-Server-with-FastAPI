"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateWorkspaceSettingsRequest$ = exports.UpdateWorkspaceSettingsRequest$outboundSchema = exports.UpdateWorkspaceSettingsRequest$inboundSchema = exports.UpdateWorkspaceSettingsGlobals$ = exports.UpdateWorkspaceSettingsGlobals$outboundSchema = exports.UpdateWorkspaceSettingsGlobals$inboundSchema = void 0;
exports.updateWorkspaceSettingsGlobalsToJSON = updateWorkspaceSettingsGlobalsToJSON;
exports.updateWorkspaceSettingsGlobalsFromJSON = updateWorkspaceSettingsGlobalsFromJSON;
exports.updateWorkspaceSettingsRequestToJSON = updateWorkspaceSettingsRequestToJSON;
exports.updateWorkspaceSettingsRequestFromJSON = updateWorkspaceSettingsRequestFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
const shared = __importStar(require("../shared/index.js"));
/** @internal */
exports.UpdateWorkspaceSettingsGlobals$inboundSchema = z.object({
    workspace_id: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workspace_id": "workspaceId",
    });
});
/** @internal */
exports.UpdateWorkspaceSettingsGlobals$outboundSchema = z.object({
    workspaceId: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workspaceId: "workspace_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UpdateWorkspaceSettingsGlobals$;
(function (UpdateWorkspaceSettingsGlobals$) {
    /** @deprecated use `UpdateWorkspaceSettingsGlobals$inboundSchema` instead. */
    UpdateWorkspaceSettingsGlobals$.inboundSchema = exports.UpdateWorkspaceSettingsGlobals$inboundSchema;
    /** @deprecated use `UpdateWorkspaceSettingsGlobals$outboundSchema` instead. */
    UpdateWorkspaceSettingsGlobals$.outboundSchema = exports.UpdateWorkspaceSettingsGlobals$outboundSchema;
})(UpdateWorkspaceSettingsGlobals$ || (exports.UpdateWorkspaceSettingsGlobals$ = UpdateWorkspaceSettingsGlobals$ = {}));
function updateWorkspaceSettingsGlobalsToJSON(updateWorkspaceSettingsGlobals) {
    return JSON.stringify(exports.UpdateWorkspaceSettingsGlobals$outboundSchema.parse(updateWorkspaceSettingsGlobals));
}
function updateWorkspaceSettingsGlobalsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UpdateWorkspaceSettingsGlobals$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateWorkspaceSettingsGlobals' from JSON`);
}
/** @internal */
exports.UpdateWorkspaceSettingsRequest$inboundSchema = z.object({
    workspace_id: z.string().optional(),
    WorkspaceSettings: shared.WorkspaceSettings$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workspace_id": "workspaceId",
        "WorkspaceSettings": "workspaceSettings",
    });
});
/** @internal */
exports.UpdateWorkspaceSettingsRequest$outboundSchema = z.object({
    workspaceId: z.string().optional(),
    workspaceSettings: shared.WorkspaceSettings$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workspaceId: "workspace_id",
        workspaceSettings: "WorkspaceSettings",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UpdateWorkspaceSettingsRequest$;
(function (UpdateWorkspaceSettingsRequest$) {
    /** @deprecated use `UpdateWorkspaceSettingsRequest$inboundSchema` instead. */
    UpdateWorkspaceSettingsRequest$.inboundSchema = exports.UpdateWorkspaceSettingsRequest$inboundSchema;
    /** @deprecated use `UpdateWorkspaceSettingsRequest$outboundSchema` instead. */
    UpdateWorkspaceSettingsRequest$.outboundSchema = exports.UpdateWorkspaceSettingsRequest$outboundSchema;
})(UpdateWorkspaceSettingsRequest$ || (exports.UpdateWorkspaceSettingsRequest$ = UpdateWorkspaceSettingsRequest$ = {}));
function updateWorkspaceSettingsRequestToJSON(updateWorkspaceSettingsRequest) {
    return JSON.stringify(exports.UpdateWorkspaceSettingsRequest$outboundSchema.parse(updateWorkspaceSettingsRequest));
}
function updateWorkspaceSettingsRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UpdateWorkspaceSettingsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateWorkspaceSettingsRequest' from JSON`);
}
//# sourceMappingURL=updateworkspacesettings.js.map
import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
export type SuggestRequest = {
    xSessionId: string;
    /**
     * The OAS summary and diagnostics to use for the suggestion.
     */
    suggestRequestBody: shared.SuggestRequestBody;
};
/** @internal */
export declare const SuggestRequest$inboundSchema: z.ZodType<SuggestRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type SuggestRequest$Outbound = {
    "x-session-id": string;
    SuggestRequestBody: shared.SuggestRequestBody$Outbound;
};
/** @internal */
export declare const SuggestRequest$outboundSchema: z.ZodType<SuggestRequest$Outbound, z.ZodTypeDef, SuggestRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace SuggestRequest$ {
    /** @deprecated use `SuggestRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<SuggestRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `SuggestRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<SuggestRequest$Outbound, z.ZodTypeDef, SuggestRequest>;
    /** @deprecated use `SuggestRequest$Outbound` instead. */
    type Outbound = SuggestRequest$Outbound;
}
export declare function suggestRequestToJSON(suggestRequest: SuggestRequest): string;
export declare function suggestRequestFromJSON(jsonString: string): SafeParseResult<SuggestRequest, SDKValidationError>;
//# sourceMappingURL=suggest.d.ts.map
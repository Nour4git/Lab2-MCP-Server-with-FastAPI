import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type CheckGithubAccessRequest = {
    org: string;
    repo: string;
};
/** @internal */
export declare const CheckGithubAccessRequest$inboundSchema: z.ZodType<CheckGithubAccessRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckGithubAccessRequest$Outbound = {
    org: string;
    repo: string;
};
/** @internal */
export declare const CheckGithubAccessRequest$outboundSchema: z.ZodType<CheckGithubAccessRequest$Outbound, z.ZodTypeDef, CheckGithubAccessRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckGithubAccessRequest$ {
    /** @deprecated use `CheckGithubAccessRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckGithubAccessRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckGithubAccessRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckGithubAccessRequest$Outbound, z.ZodTypeDef, CheckGithubAccessRequest>;
    /** @deprecated use `CheckGithubAccessRequest$Outbound` instead. */
    type Outbound = CheckGithubAccessRequest$Outbound;
}
export declare function checkGithubAccessRequestToJSON(checkGithubAccessRequest: CheckGithubAccessRequest): string;
export declare function checkGithubAccessRequestFromJSON(jsonString: string): SafeParseResult<CheckGithubAccessRequest, SDKValidationError>;
//# sourceMappingURL=checkgithubaccess.d.ts.map
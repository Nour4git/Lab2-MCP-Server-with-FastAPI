import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
/**
 * Job accepted, returns a job ID to poll for status and result
 */
export type GenerateCodeSamplePreviewAsyncResponseBody = {
    /**
     * The job ID for polling
     */
    jobId: string;
    /**
     * The current status of the job. Possible values are `pending` or `running`.
     */
    status: shared.CodeSamplesJobStatus;
};
/** @internal */
export declare const GenerateCodeSamplePreviewAsyncResponseBody$inboundSchema: z.ZodType<GenerateCodeSamplePreviewAsyncResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GenerateCodeSamplePreviewAsyncResponseBody$Outbound = {
    job_id: string;
    status: string;
};
/** @internal */
export declare const GenerateCodeSamplePreviewAsyncResponseBody$outboundSchema: z.ZodType<GenerateCodeSamplePreviewAsyncResponseBody$Outbound, z.ZodTypeDef, GenerateCodeSamplePreviewAsyncResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GenerateCodeSamplePreviewAsyncResponseBody$ {
    /** @deprecated use `GenerateCodeSamplePreviewAsyncResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GenerateCodeSamplePreviewAsyncResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GenerateCodeSamplePreviewAsyncResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GenerateCodeSamplePreviewAsyncResponseBody$Outbound, z.ZodTypeDef, GenerateCodeSamplePreviewAsyncResponseBody>;
    /** @deprecated use `GenerateCodeSamplePreviewAsyncResponseBody$Outbound` instead. */
    type Outbound = GenerateCodeSamplePreviewAsyncResponseBody$Outbound;
}
export declare function generateCodeSamplePreviewAsyncResponseBodyToJSON(generateCodeSamplePreviewAsyncResponseBody: GenerateCodeSamplePreviewAsyncResponseBody): string;
export declare function generateCodeSamplePreviewAsyncResponseBodyFromJSON(jsonString: string): SafeParseResult<GenerateCodeSamplePreviewAsyncResponseBody, SDKValidationError>;
//# sourceMappingURL=generatecodesamplepreviewasync.d.ts.map
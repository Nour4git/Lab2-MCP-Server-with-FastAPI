import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GrantUserAccessToWorkspaceGlobals = {
    workspaceId?: string | undefined;
};
export type GrantUserAccessToWorkspaceRequest = {
    /**
     * Unique identifier of the workspace.
     */
    workspaceId?: string | undefined;
    /**
     * Email of the user to grant access to.
     */
    email: string;
};
/** @internal */
export declare const GrantUserAccessToWorkspaceGlobals$inboundSchema: z.ZodType<GrantUserAccessToWorkspaceGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type GrantUserAccessToWorkspaceGlobals$Outbound = {
    workspace_id?: string | undefined;
};
/** @internal */
export declare const GrantUserAccessToWorkspaceGlobals$outboundSchema: z.ZodType<GrantUserAccessToWorkspaceGlobals$Outbound, z.ZodTypeDef, GrantUserAccessToWorkspaceGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GrantUserAccessToWorkspaceGlobals$ {
    /** @deprecated use `GrantUserAccessToWorkspaceGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GrantUserAccessToWorkspaceGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `GrantUserAccessToWorkspaceGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GrantUserAccessToWorkspaceGlobals$Outbound, z.ZodTypeDef, GrantUserAccessToWorkspaceGlobals>;
    /** @deprecated use `GrantUserAccessToWorkspaceGlobals$Outbound` instead. */
    type Outbound = GrantUserAccessToWorkspaceGlobals$Outbound;
}
export declare function grantUserAccessToWorkspaceGlobalsToJSON(grantUserAccessToWorkspaceGlobals: GrantUserAccessToWorkspaceGlobals): string;
export declare function grantUserAccessToWorkspaceGlobalsFromJSON(jsonString: string): SafeParseResult<GrantUserAccessToWorkspaceGlobals, SDKValidationError>;
/** @internal */
export declare const GrantUserAccessToWorkspaceRequest$inboundSchema: z.ZodType<GrantUserAccessToWorkspaceRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GrantUserAccessToWorkspaceRequest$Outbound = {
    workspace_id?: string | undefined;
    email: string;
};
/** @internal */
export declare const GrantUserAccessToWorkspaceRequest$outboundSchema: z.ZodType<GrantUserAccessToWorkspaceRequest$Outbound, z.ZodTypeDef, GrantUserAccessToWorkspaceRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GrantUserAccessToWorkspaceRequest$ {
    /** @deprecated use `GrantUserAccessToWorkspaceRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GrantUserAccessToWorkspaceRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GrantUserAccessToWorkspaceRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GrantUserAccessToWorkspaceRequest$Outbound, z.ZodTypeDef, GrantUserAccessToWorkspaceRequest>;
    /** @deprecated use `GrantUserAccessToWorkspaceRequest$Outbound` instead. */
    type Outbound = GrantUserAccessToWorkspaceRequest$Outbound;
}
export declare function grantUserAccessToWorkspaceRequestToJSON(grantUserAccessToWorkspaceRequest: GrantUserAccessToWorkspaceRequest): string;
export declare function grantUserAccessToWorkspaceRequestFromJSON(jsonString: string): SafeParseResult<GrantUserAccessToWorkspaceRequest, SDKValidationError>;
//# sourceMappingURL=grantuseraccesstoworkspace.d.ts.map
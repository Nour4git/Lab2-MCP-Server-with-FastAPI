import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetWorkspaceTargetsRequest = {
    /**
     * Filter to only return targets with events created after this timestamp
     */
    afterLastEventCreatedAt?: Date | undefined;
};
/** @internal */
export declare const GetWorkspaceTargetsRequest$inboundSchema: z.ZodType<GetWorkspaceTargetsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetWorkspaceTargetsRequest$Outbound = {
    after_last_event_created_at?: string | undefined;
};
/** @internal */
export declare const GetWorkspaceTargetsRequest$outboundSchema: z.ZodType<GetWorkspaceTargetsRequest$Outbound, z.ZodTypeDef, GetWorkspaceTargetsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetWorkspaceTargetsRequest$ {
    /** @deprecated use `GetWorkspaceTargetsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetWorkspaceTargetsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetWorkspaceTargetsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetWorkspaceTargetsRequest$Outbound, z.ZodTypeDef, GetWorkspaceTargetsRequest>;
    /** @deprecated use `GetWorkspaceTargetsRequest$Outbound` instead. */
    type Outbound = GetWorkspaceTargetsRequest$Outbound;
}
export declare function getWorkspaceTargetsRequestToJSON(getWorkspaceTargetsRequest: GetWorkspaceTargetsRequest): string;
export declare function getWorkspaceTargetsRequestFromJSON(jsonString: string): SafeParseResult<GetWorkspaceTargetsRequest, SDKValidationError>;
//# sourceMappingURL=getworkspacetargets.d.ts.map
import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";
export type SearchWorkspaceEventsGlobals = {
    workspaceId?: string | undefined;
};
export type SearchWorkspaceEventsRequest = {
    /**
     * Unique identifier of the workspace.
     */
    workspaceId?: string | undefined;
    /**
     * Unique identifier of the source revision digest.
     */
    sourceRevisionDigest?: string | undefined;
    /**
     * Unique identifier of the lint report digest.
     */
    lintReportDigest?: string | undefined;
    /**
     * Unique identifier of the openapi diff report digest.
     */
    openapiDiffReportDigest?: string | undefined;
    /**
     * Specified interaction type for events.
     */
    interactionType?: shared.InteractionType | undefined;
    /**
     * A specific gen lock ID for the events.
     */
    generateGenLockId?: string | undefined;
    /**
     * Shared execution ID for cli events across a single action.
     */
    executionId?: string | undefined;
    /**
     * Whether the event was successful or not.
     */
    success?: boolean | undefined;
    /**
     * Number of results to return.
     */
    limit?: number | undefined;
};
/** @internal */
export declare const SearchWorkspaceEventsGlobals$inboundSchema: z.ZodType<SearchWorkspaceEventsGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type SearchWorkspaceEventsGlobals$Outbound = {
    workspace_id?: string | undefined;
};
/** @internal */
export declare const SearchWorkspaceEventsGlobals$outboundSchema: z.ZodType<SearchWorkspaceEventsGlobals$Outbound, z.ZodTypeDef, SearchWorkspaceEventsGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace SearchWorkspaceEventsGlobals$ {
    /** @deprecated use `SearchWorkspaceEventsGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<SearchWorkspaceEventsGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `SearchWorkspaceEventsGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<SearchWorkspaceEventsGlobals$Outbound, z.ZodTypeDef, SearchWorkspaceEventsGlobals>;
    /** @deprecated use `SearchWorkspaceEventsGlobals$Outbound` instead. */
    type Outbound = SearchWorkspaceEventsGlobals$Outbound;
}
export declare function searchWorkspaceEventsGlobalsToJSON(searchWorkspaceEventsGlobals: SearchWorkspaceEventsGlobals): string;
export declare function searchWorkspaceEventsGlobalsFromJSON(jsonString: string): SafeParseResult<SearchWorkspaceEventsGlobals, SDKValidationError>;
/** @internal */
export declare const SearchWorkspaceEventsRequest$inboundSchema: z.ZodType<SearchWorkspaceEventsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type SearchWorkspaceEventsRequest$Outbound = {
    workspace_id?: string | undefined;
    source_revision_digest?: string | undefined;
    lint_report_digest?: string | undefined;
    openapi_diff_report_digest?: string | undefined;
    interaction_type?: string | undefined;
    generate_gen_lock_id?: string | undefined;
    execution_id?: string | undefined;
    success?: boolean | undefined;
    limit?: number | undefined;
};
/** @internal */
export declare const SearchWorkspaceEventsRequest$outboundSchema: z.ZodType<SearchWorkspaceEventsRequest$Outbound, z.ZodTypeDef, SearchWorkspaceEventsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace SearchWorkspaceEventsRequest$ {
    /** @deprecated use `SearchWorkspaceEventsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<SearchWorkspaceEventsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `SearchWorkspaceEventsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<SearchWorkspaceEventsRequest$Outbound, z.ZodTypeDef, SearchWorkspaceEventsRequest>;
    /** @deprecated use `SearchWorkspaceEventsRequest$Outbound` instead. */
    type Outbound = SearchWorkspaceEventsRequest$Outbound;
}
export declare function searchWorkspaceEventsRequestToJSON(searchWorkspaceEventsRequest: SearchWorkspaceEventsRequest): string;
export declare function searchWorkspaceEventsRequestFromJSON(jsonString: string): SafeParseResult<SearchWorkspaceEventsRequest, SDKValidationError>;
//# sourceMappingURL=searchworkspaceevents.d.ts.map
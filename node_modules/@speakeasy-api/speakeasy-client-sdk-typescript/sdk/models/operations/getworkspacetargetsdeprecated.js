"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetWorkspaceTargetsDeprecatedRequest$ = exports.GetWorkspaceTargetsDeprecatedRequest$outboundSchema = exports.GetWorkspaceTargetsDeprecatedRequest$inboundSchema = exports.GetWorkspaceTargetsDeprecatedGlobals$ = exports.GetWorkspaceTargetsDeprecatedGlobals$outboundSchema = exports.GetWorkspaceTargetsDeprecatedGlobals$inboundSchema = void 0;
exports.getWorkspaceTargetsDeprecatedGlobalsToJSON = getWorkspaceTargetsDeprecatedGlobalsToJSON;
exports.getWorkspaceTargetsDeprecatedGlobalsFromJSON = getWorkspaceTargetsDeprecatedGlobalsFromJSON;
exports.getWorkspaceTargetsDeprecatedRequestToJSON = getWorkspaceTargetsDeprecatedRequestToJSON;
exports.getWorkspaceTargetsDeprecatedRequestFromJSON = getWorkspaceTargetsDeprecatedRequestFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.GetWorkspaceTargetsDeprecatedGlobals$inboundSchema = z.object({
    workspace_id: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workspace_id": "workspaceId",
    });
});
/** @internal */
exports.GetWorkspaceTargetsDeprecatedGlobals$outboundSchema = z.object({
    workspaceId: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workspaceId: "workspace_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetWorkspaceTargetsDeprecatedGlobals$;
(function (GetWorkspaceTargetsDeprecatedGlobals$) {
    /** @deprecated use `GetWorkspaceTargetsDeprecatedGlobals$inboundSchema` instead. */
    GetWorkspaceTargetsDeprecatedGlobals$.inboundSchema = exports.GetWorkspaceTargetsDeprecatedGlobals$inboundSchema;
    /** @deprecated use `GetWorkspaceTargetsDeprecatedGlobals$outboundSchema` instead. */
    GetWorkspaceTargetsDeprecatedGlobals$.outboundSchema = exports.GetWorkspaceTargetsDeprecatedGlobals$outboundSchema;
})(GetWorkspaceTargetsDeprecatedGlobals$ || (exports.GetWorkspaceTargetsDeprecatedGlobals$ = GetWorkspaceTargetsDeprecatedGlobals$ = {}));
function getWorkspaceTargetsDeprecatedGlobalsToJSON(getWorkspaceTargetsDeprecatedGlobals) {
    return JSON.stringify(exports.GetWorkspaceTargetsDeprecatedGlobals$outboundSchema.parse(getWorkspaceTargetsDeprecatedGlobals));
}
function getWorkspaceTargetsDeprecatedGlobalsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetWorkspaceTargetsDeprecatedGlobals$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetWorkspaceTargetsDeprecatedGlobals' from JSON`);
}
/** @internal */
exports.GetWorkspaceTargetsDeprecatedRequest$inboundSchema = z.object({
    workspace_id: z.string().optional(),
    after_last_event_created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workspace_id": "workspaceId",
        "after_last_event_created_at": "afterLastEventCreatedAt",
    });
});
/** @internal */
exports.GetWorkspaceTargetsDeprecatedRequest$outboundSchema = z.object({
    workspaceId: z.string().optional(),
    afterLastEventCreatedAt: z.date().transform(v => v.toISOString()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workspaceId: "workspace_id",
        afterLastEventCreatedAt: "after_last_event_created_at",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetWorkspaceTargetsDeprecatedRequest$;
(function (GetWorkspaceTargetsDeprecatedRequest$) {
    /** @deprecated use `GetWorkspaceTargetsDeprecatedRequest$inboundSchema` instead. */
    GetWorkspaceTargetsDeprecatedRequest$.inboundSchema = exports.GetWorkspaceTargetsDeprecatedRequest$inboundSchema;
    /** @deprecated use `GetWorkspaceTargetsDeprecatedRequest$outboundSchema` instead. */
    GetWorkspaceTargetsDeprecatedRequest$.outboundSchema = exports.GetWorkspaceTargetsDeprecatedRequest$outboundSchema;
})(GetWorkspaceTargetsDeprecatedRequest$ || (exports.GetWorkspaceTargetsDeprecatedRequest$ = GetWorkspaceTargetsDeprecatedRequest$ = {}));
function getWorkspaceTargetsDeprecatedRequestToJSON(getWorkspaceTargetsDeprecatedRequest) {
    return JSON.stringify(exports.GetWorkspaceTargetsDeprecatedRequest$outboundSchema.parse(getWorkspaceTargetsDeprecatedRequest));
}
function getWorkspaceTargetsDeprecatedRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetWorkspaceTargetsDeprecatedRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetWorkspaceTargetsDeprecatedRequest' from JSON`);
}
//# sourceMappingURL=getworkspacetargetsdeprecated.js.map
import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetWorkspaceEventsByTargetGlobals = {
    workspaceId?: string | undefined;
};
export type GetWorkspaceEventsByTargetRequest = {
    /**
     * Unique identifier of the workspace.
     */
    workspaceId?: string | undefined;
    /**
     * Filter to only return events corresponding to a particular gen_lock_id (gen_lock_id uniquely identifies a target)
     */
    targetId: string;
    /**
     * Filter to only return events created after this timestamp
     */
    afterCreatedAt?: Date | undefined;
};
/** @internal */
export declare const GetWorkspaceEventsByTargetGlobals$inboundSchema: z.ZodType<GetWorkspaceEventsByTargetGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type GetWorkspaceEventsByTargetGlobals$Outbound = {
    workspace_id?: string | undefined;
};
/** @internal */
export declare const GetWorkspaceEventsByTargetGlobals$outboundSchema: z.ZodType<GetWorkspaceEventsByTargetGlobals$Outbound, z.ZodTypeDef, GetWorkspaceEventsByTargetGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetWorkspaceEventsByTargetGlobals$ {
    /** @deprecated use `GetWorkspaceEventsByTargetGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetWorkspaceEventsByTargetGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetWorkspaceEventsByTargetGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetWorkspaceEventsByTargetGlobals$Outbound, z.ZodTypeDef, GetWorkspaceEventsByTargetGlobals>;
    /** @deprecated use `GetWorkspaceEventsByTargetGlobals$Outbound` instead. */
    type Outbound = GetWorkspaceEventsByTargetGlobals$Outbound;
}
export declare function getWorkspaceEventsByTargetGlobalsToJSON(getWorkspaceEventsByTargetGlobals: GetWorkspaceEventsByTargetGlobals): string;
export declare function getWorkspaceEventsByTargetGlobalsFromJSON(jsonString: string): SafeParseResult<GetWorkspaceEventsByTargetGlobals, SDKValidationError>;
/** @internal */
export declare const GetWorkspaceEventsByTargetRequest$inboundSchema: z.ZodType<GetWorkspaceEventsByTargetRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetWorkspaceEventsByTargetRequest$Outbound = {
    workspace_id?: string | undefined;
    target_id: string;
    after_created_at?: string | undefined;
};
/** @internal */
export declare const GetWorkspaceEventsByTargetRequest$outboundSchema: z.ZodType<GetWorkspaceEventsByTargetRequest$Outbound, z.ZodTypeDef, GetWorkspaceEventsByTargetRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetWorkspaceEventsByTargetRequest$ {
    /** @deprecated use `GetWorkspaceEventsByTargetRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetWorkspaceEventsByTargetRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetWorkspaceEventsByTargetRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetWorkspaceEventsByTargetRequest$Outbound, z.ZodTypeDef, GetWorkspaceEventsByTargetRequest>;
    /** @deprecated use `GetWorkspaceEventsByTargetRequest$Outbound` instead. */
    type Outbound = GetWorkspaceEventsByTargetRequest$Outbound;
}
export declare function getWorkspaceEventsByTargetRequestToJSON(getWorkspaceEventsByTargetRequest: GetWorkspaceEventsByTargetRequest): string;
export declare function getWorkspaceEventsByTargetRequestFromJSON(jsonString: string): SafeParseResult<GetWorkspaceEventsByTargetRequest, SDKValidationError>;
//# sourceMappingURL=getworkspaceeventsbytarget.d.ts.map
import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetWorkspaceFeatureFlagsGlobals = {
    workspaceId?: string | undefined;
};
export type GetWorkspaceFeatureFlagsRequest = {
    /**
     * Unique identifier of the workspace.
     */
    workspaceId?: string | undefined;
};
/** @internal */
export declare const GetWorkspaceFeatureFlagsGlobals$inboundSchema: z.ZodType<GetWorkspaceFeatureFlagsGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type GetWorkspaceFeatureFlagsGlobals$Outbound = {
    workspace_id?: string | undefined;
};
/** @internal */
export declare const GetWorkspaceFeatureFlagsGlobals$outboundSchema: z.ZodType<GetWorkspaceFeatureFlagsGlobals$Outbound, z.ZodTypeDef, GetWorkspaceFeatureFlagsGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetWorkspaceFeatureFlagsGlobals$ {
    /** @deprecated use `GetWorkspaceFeatureFlagsGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetWorkspaceFeatureFlagsGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetWorkspaceFeatureFlagsGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetWorkspaceFeatureFlagsGlobals$Outbound, z.ZodTypeDef, GetWorkspaceFeatureFlagsGlobals>;
    /** @deprecated use `GetWorkspaceFeatureFlagsGlobals$Outbound` instead. */
    type Outbound = GetWorkspaceFeatureFlagsGlobals$Outbound;
}
export declare function getWorkspaceFeatureFlagsGlobalsToJSON(getWorkspaceFeatureFlagsGlobals: GetWorkspaceFeatureFlagsGlobals): string;
export declare function getWorkspaceFeatureFlagsGlobalsFromJSON(jsonString: string): SafeParseResult<GetWorkspaceFeatureFlagsGlobals, SDKValidationError>;
/** @internal */
export declare const GetWorkspaceFeatureFlagsRequest$inboundSchema: z.ZodType<GetWorkspaceFeatureFlagsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetWorkspaceFeatureFlagsRequest$Outbound = {
    workspace_id?: string | undefined;
};
/** @internal */
export declare const GetWorkspaceFeatureFlagsRequest$outboundSchema: z.ZodType<GetWorkspaceFeatureFlagsRequest$Outbound, z.ZodTypeDef, GetWorkspaceFeatureFlagsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetWorkspaceFeatureFlagsRequest$ {
    /** @deprecated use `GetWorkspaceFeatureFlagsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetWorkspaceFeatureFlagsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetWorkspaceFeatureFlagsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetWorkspaceFeatureFlagsRequest$Outbound, z.ZodTypeDef, GetWorkspaceFeatureFlagsRequest>;
    /** @deprecated use `GetWorkspaceFeatureFlagsRequest$Outbound` instead. */
    type Outbound = GetWorkspaceFeatureFlagsRequest$Outbound;
}
export declare function getWorkspaceFeatureFlagsRequestToJSON(getWorkspaceFeatureFlagsRequest: GetWorkspaceFeatureFlagsRequest): string;
export declare function getWorkspaceFeatureFlagsRequestFromJSON(jsonString: string): SafeParseResult<GetWorkspaceFeatureFlagsRequest, SDKValidationError>;
//# sourceMappingURL=getworkspacefeatureflags.d.ts.map
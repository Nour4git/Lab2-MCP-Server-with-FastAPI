import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetWorkspaceTargetsDeprecatedGlobals = {
    workspaceId?: string | undefined;
};
export type GetWorkspaceTargetsDeprecatedRequest = {
    /**
     * Unique identifier of the workspace.
     */
    workspaceId?: string | undefined;
    /**
     * Filter to only return targets with events created after this timestamp
     */
    afterLastEventCreatedAt?: Date | undefined;
};
/** @internal */
export declare const GetWorkspaceTargetsDeprecatedGlobals$inboundSchema: z.ZodType<GetWorkspaceTargetsDeprecatedGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type GetWorkspaceTargetsDeprecatedGlobals$Outbound = {
    workspace_id?: string | undefined;
};
/** @internal */
export declare const GetWorkspaceTargetsDeprecatedGlobals$outboundSchema: z.ZodType<GetWorkspaceTargetsDeprecatedGlobals$Outbound, z.ZodTypeDef, GetWorkspaceTargetsDeprecatedGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetWorkspaceTargetsDeprecatedGlobals$ {
    /** @deprecated use `GetWorkspaceTargetsDeprecatedGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetWorkspaceTargetsDeprecatedGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetWorkspaceTargetsDeprecatedGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetWorkspaceTargetsDeprecatedGlobals$Outbound, z.ZodTypeDef, GetWorkspaceTargetsDeprecatedGlobals>;
    /** @deprecated use `GetWorkspaceTargetsDeprecatedGlobals$Outbound` instead. */
    type Outbound = GetWorkspaceTargetsDeprecatedGlobals$Outbound;
}
export declare function getWorkspaceTargetsDeprecatedGlobalsToJSON(getWorkspaceTargetsDeprecatedGlobals: GetWorkspaceTargetsDeprecatedGlobals): string;
export declare function getWorkspaceTargetsDeprecatedGlobalsFromJSON(jsonString: string): SafeParseResult<GetWorkspaceTargetsDeprecatedGlobals, SDKValidationError>;
/** @internal */
export declare const GetWorkspaceTargetsDeprecatedRequest$inboundSchema: z.ZodType<GetWorkspaceTargetsDeprecatedRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetWorkspaceTargetsDeprecatedRequest$Outbound = {
    workspace_id?: string | undefined;
    after_last_event_created_at?: string | undefined;
};
/** @internal */
export declare const GetWorkspaceTargetsDeprecatedRequest$outboundSchema: z.ZodType<GetWorkspaceTargetsDeprecatedRequest$Outbound, z.ZodTypeDef, GetWorkspaceTargetsDeprecatedRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetWorkspaceTargetsDeprecatedRequest$ {
    /** @deprecated use `GetWorkspaceTargetsDeprecatedRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetWorkspaceTargetsDeprecatedRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetWorkspaceTargetsDeprecatedRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetWorkspaceTargetsDeprecatedRequest$Outbound, z.ZodTypeDef, GetWorkspaceTargetsDeprecatedRequest>;
    /** @deprecated use `GetWorkspaceTargetsDeprecatedRequest$Outbound` instead. */
    type Outbound = GetWorkspaceTargetsDeprecatedRequest$Outbound;
}
export declare function getWorkspaceTargetsDeprecatedRequestToJSON(getWorkspaceTargetsDeprecatedRequest: GetWorkspaceTargetsDeprecatedRequest): string;
export declare function getWorkspaceTargetsDeprecatedRequestFromJSON(jsonString: string): SafeParseResult<GetWorkspaceTargetsDeprecatedRequest, SDKValidationError>;
//# sourceMappingURL=getworkspacetargetsdeprecated.d.ts.map
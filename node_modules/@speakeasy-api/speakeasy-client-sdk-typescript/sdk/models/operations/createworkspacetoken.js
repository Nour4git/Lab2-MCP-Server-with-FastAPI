"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateWorkspaceTokenRequest$ = exports.CreateWorkspaceTokenRequest$outboundSchema = exports.CreateWorkspaceTokenRequest$inboundSchema = exports.CreateWorkspaceTokenGlobals$ = exports.CreateWorkspaceTokenGlobals$outboundSchema = exports.CreateWorkspaceTokenGlobals$inboundSchema = void 0;
exports.createWorkspaceTokenGlobalsToJSON = createWorkspaceTokenGlobalsToJSON;
exports.createWorkspaceTokenGlobalsFromJSON = createWorkspaceTokenGlobalsFromJSON;
exports.createWorkspaceTokenRequestToJSON = createWorkspaceTokenRequestToJSON;
exports.createWorkspaceTokenRequestFromJSON = createWorkspaceTokenRequestFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
const shared = __importStar(require("../shared/index.js"));
/** @internal */
exports.CreateWorkspaceTokenGlobals$inboundSchema = z.object({
    workspace_id: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workspace_id": "workspaceId",
    });
});
/** @internal */
exports.CreateWorkspaceTokenGlobals$outboundSchema = z.object({
    workspaceId: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workspaceId: "workspace_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateWorkspaceTokenGlobals$;
(function (CreateWorkspaceTokenGlobals$) {
    /** @deprecated use `CreateWorkspaceTokenGlobals$inboundSchema` instead. */
    CreateWorkspaceTokenGlobals$.inboundSchema = exports.CreateWorkspaceTokenGlobals$inboundSchema;
    /** @deprecated use `CreateWorkspaceTokenGlobals$outboundSchema` instead. */
    CreateWorkspaceTokenGlobals$.outboundSchema = exports.CreateWorkspaceTokenGlobals$outboundSchema;
})(CreateWorkspaceTokenGlobals$ || (exports.CreateWorkspaceTokenGlobals$ = CreateWorkspaceTokenGlobals$ = {}));
function createWorkspaceTokenGlobalsToJSON(createWorkspaceTokenGlobals) {
    return JSON.stringify(exports.CreateWorkspaceTokenGlobals$outboundSchema.parse(createWorkspaceTokenGlobals));
}
function createWorkspaceTokenGlobalsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateWorkspaceTokenGlobals$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateWorkspaceTokenGlobals' from JSON`);
}
/** @internal */
exports.CreateWorkspaceTokenRequest$inboundSchema = z.object({
    workspace_id: z.string().optional(),
    WorkspaceToken: shared.WorkspaceToken$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workspace_id": "workspaceId",
        "WorkspaceToken": "workspaceToken",
    });
});
/** @internal */
exports.CreateWorkspaceTokenRequest$outboundSchema = z.object({
    workspaceId: z.string().optional(),
    workspaceToken: shared.WorkspaceToken$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workspaceId: "workspace_id",
        workspaceToken: "WorkspaceToken",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateWorkspaceTokenRequest$;
(function (CreateWorkspaceTokenRequest$) {
    /** @deprecated use `CreateWorkspaceTokenRequest$inboundSchema` instead. */
    CreateWorkspaceTokenRequest$.inboundSchema = exports.CreateWorkspaceTokenRequest$inboundSchema;
    /** @deprecated use `CreateWorkspaceTokenRequest$outboundSchema` instead. */
    CreateWorkspaceTokenRequest$.outboundSchema = exports.CreateWorkspaceTokenRequest$outboundSchema;
})(CreateWorkspaceTokenRequest$ || (exports.CreateWorkspaceTokenRequest$ = CreateWorkspaceTokenRequest$ = {}));
function createWorkspaceTokenRequestToJSON(createWorkspaceTokenRequest) {
    return JSON.stringify(exports.CreateWorkspaceTokenRequest$outboundSchema.parse(createWorkspaceTokenRequest));
}
function createWorkspaceTokenRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CreateWorkspaceTokenRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateWorkspaceTokenRequest' from JSON`);
}
//# sourceMappingURL=createworkspacetoken.js.map
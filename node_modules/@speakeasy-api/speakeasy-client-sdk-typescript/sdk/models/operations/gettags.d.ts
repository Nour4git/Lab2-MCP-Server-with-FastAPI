import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetTagsRequest = {
    namespaceName: string;
};
/** @internal */
export declare const GetTagsRequest$inboundSchema: z.ZodType<GetTagsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetTagsRequest$Outbound = {
    namespace_name: string;
};
/** @internal */
export declare const GetTagsRequest$outboundSchema: z.ZodType<GetTagsRequest$Outbound, z.ZodTypeDef, GetTagsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetTagsRequest$ {
    /** @deprecated use `GetTagsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetTagsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetTagsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetTagsRequest$Outbound, z.ZodTypeDef, GetTagsRequest>;
    /** @deprecated use `GetTagsRequest$Outbound` instead. */
    type Outbound = GetTagsRequest$Outbound;
}
export declare function getTagsRequestToJSON(getTagsRequest: GetTagsRequest): string;
export declare function getTagsRequestFromJSON(jsonString: string): SafeParseResult<GetTagsRequest, SDKValidationError>;
//# sourceMappingURL=gettags.d.ts.map
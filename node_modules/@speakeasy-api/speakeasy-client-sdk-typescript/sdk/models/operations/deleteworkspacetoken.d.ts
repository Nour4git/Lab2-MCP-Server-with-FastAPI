import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type DeleteWorkspaceTokenGlobals = {
    workspaceId?: string | undefined;
};
export type DeleteWorkspaceTokenRequest = {
    /**
     * Unique identifier of the workspace.
     */
    workspaceId?: string | undefined;
    /**
     * Unique identifier of the token.
     */
    tokenID: string;
};
/** @internal */
export declare const DeleteWorkspaceTokenGlobals$inboundSchema: z.ZodType<DeleteWorkspaceTokenGlobals, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteWorkspaceTokenGlobals$Outbound = {
    workspace_id?: string | undefined;
};
/** @internal */
export declare const DeleteWorkspaceTokenGlobals$outboundSchema: z.ZodType<DeleteWorkspaceTokenGlobals$Outbound, z.ZodTypeDef, DeleteWorkspaceTokenGlobals>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteWorkspaceTokenGlobals$ {
    /** @deprecated use `DeleteWorkspaceTokenGlobals$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteWorkspaceTokenGlobals, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteWorkspaceTokenGlobals$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteWorkspaceTokenGlobals$Outbound, z.ZodTypeDef, DeleteWorkspaceTokenGlobals>;
    /** @deprecated use `DeleteWorkspaceTokenGlobals$Outbound` instead. */
    type Outbound = DeleteWorkspaceTokenGlobals$Outbound;
}
export declare function deleteWorkspaceTokenGlobalsToJSON(deleteWorkspaceTokenGlobals: DeleteWorkspaceTokenGlobals): string;
export declare function deleteWorkspaceTokenGlobalsFromJSON(jsonString: string): SafeParseResult<DeleteWorkspaceTokenGlobals, SDKValidationError>;
/** @internal */
export declare const DeleteWorkspaceTokenRequest$inboundSchema: z.ZodType<DeleteWorkspaceTokenRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteWorkspaceTokenRequest$Outbound = {
    workspace_id?: string | undefined;
    tokenID: string;
};
/** @internal */
export declare const DeleteWorkspaceTokenRequest$outboundSchema: z.ZodType<DeleteWorkspaceTokenRequest$Outbound, z.ZodTypeDef, DeleteWorkspaceTokenRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteWorkspaceTokenRequest$ {
    /** @deprecated use `DeleteWorkspaceTokenRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteWorkspaceTokenRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteWorkspaceTokenRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteWorkspaceTokenRequest$Outbound, z.ZodTypeDef, DeleteWorkspaceTokenRequest>;
    /** @deprecated use `DeleteWorkspaceTokenRequest$Outbound` instead. */
    type Outbound = DeleteWorkspaceTokenRequest$Outbound;
}
export declare function deleteWorkspaceTokenRequestToJSON(deleteWorkspaceTokenRequest: DeleteWorkspaceTokenRequest): string;
export declare function deleteWorkspaceTokenRequestFromJSON(jsonString: string): SafeParseResult<DeleteWorkspaceTokenRequest, SDKValidationError>;
//# sourceMappingURL=deleteworkspacetoken.d.ts.map
import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
export type GetLintingReportSignedUrlRequest = {
    /**
     * The checksum of the document to retrieve the signed access url for.
     */
    documentChecksum: string;
};
/**
 * OK
 */
export type GetLintingReportSignedUrlSignedAccess = {
    url: string;
};
/** @internal */
export declare const GetLintingReportSignedUrlRequest$inboundSchema: z.ZodType<GetLintingReportSignedUrlRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetLintingReportSignedUrlRequest$Outbound = {
    documentChecksum: string;
};
/** @internal */
export declare const GetLintingReportSignedUrlRequest$outboundSchema: z.ZodType<GetLintingReportSignedUrlRequest$Outbound, z.ZodTypeDef, GetLintingReportSignedUrlRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetLintingReportSignedUrlRequest$ {
    /** @deprecated use `GetLintingReportSignedUrlRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetLintingReportSignedUrlRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetLintingReportSignedUrlRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetLintingReportSignedUrlRequest$Outbound, z.ZodTypeDef, GetLintingReportSignedUrlRequest>;
    /** @deprecated use `GetLintingReportSignedUrlRequest$Outbound` instead. */
    type Outbound = GetLintingReportSignedUrlRequest$Outbound;
}
export declare function getLintingReportSignedUrlRequestToJSON(getLintingReportSignedUrlRequest: GetLintingReportSignedUrlRequest): string;
export declare function getLintingReportSignedUrlRequestFromJSON(jsonString: string): SafeParseResult<GetLintingReportSignedUrlRequest, SDKValidationError>;
/** @internal */
export declare const GetLintingReportSignedUrlSignedAccess$inboundSchema: z.ZodType<GetLintingReportSignedUrlSignedAccess, z.ZodTypeDef, unknown>;
/** @internal */
export type GetLintingReportSignedUrlSignedAccess$Outbound = {
    url: string;
};
/** @internal */
export declare const GetLintingReportSignedUrlSignedAccess$outboundSchema: z.ZodType<GetLintingReportSignedUrlSignedAccess$Outbound, z.ZodTypeDef, GetLintingReportSignedUrlSignedAccess>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetLintingReportSignedUrlSignedAccess$ {
    /** @deprecated use `GetLintingReportSignedUrlSignedAccess$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetLintingReportSignedUrlSignedAccess, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetLintingReportSignedUrlSignedAccess$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetLintingReportSignedUrlSignedAccess$Outbound, z.ZodTypeDef, GetLintingReportSignedUrlSignedAccess>;
    /** @deprecated use `GetLintingReportSignedUrlSignedAccess$Outbound` instead. */
    type Outbound = GetLintingReportSignedUrlSignedAccess$Outbound;
}
export declare function getLintingReportSignedUrlSignedAccessToJSON(getLintingReportSignedUrlSignedAccess: GetLintingReportSignedUrlSignedAccess): string;
export declare function getLintingReportSignedUrlSignedAccessFromJSON(jsonString: string): SafeParseResult<GetLintingReportSignedUrlSignedAccess, SDKValidationError>;
//# sourceMappingURL=getlintingreportsignedurl.d.ts.map
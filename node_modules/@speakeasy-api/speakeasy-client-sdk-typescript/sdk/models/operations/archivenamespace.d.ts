import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * Archived status
 */
export type ArchiveNamespaceRequestBody = {
    archived?: boolean | undefined;
};
export type ArchiveNamespaceRequest = {
    namespaceName: string;
    /**
     * Archived status
     */
    requestBody?: ArchiveNamespaceRequestBody | undefined;
};
/** @internal */
export declare const ArchiveNamespaceRequestBody$inboundSchema: z.ZodType<ArchiveNamespaceRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type ArchiveNamespaceRequestBody$Outbound = {
    archived: boolean;
};
/** @internal */
export declare const ArchiveNamespaceRequestBody$outboundSchema: z.ZodType<ArchiveNamespaceRequestBody$Outbound, z.ZodTypeDef, ArchiveNamespaceRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ArchiveNamespaceRequestBody$ {
    /** @deprecated use `ArchiveNamespaceRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ArchiveNamespaceRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `ArchiveNamespaceRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ArchiveNamespaceRequestBody$Outbound, z.ZodTypeDef, ArchiveNamespaceRequestBody>;
    /** @deprecated use `ArchiveNamespaceRequestBody$Outbound` instead. */
    type Outbound = ArchiveNamespaceRequestBody$Outbound;
}
export declare function archiveNamespaceRequestBodyToJSON(archiveNamespaceRequestBody: ArchiveNamespaceRequestBody): string;
export declare function archiveNamespaceRequestBodyFromJSON(jsonString: string): SafeParseResult<ArchiveNamespaceRequestBody, SDKValidationError>;
/** @internal */
export declare const ArchiveNamespaceRequest$inboundSchema: z.ZodType<ArchiveNamespaceRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ArchiveNamespaceRequest$Outbound = {
    namespace_name: string;
    RequestBody?: ArchiveNamespaceRequestBody$Outbound | undefined;
};
/** @internal */
export declare const ArchiveNamespaceRequest$outboundSchema: z.ZodType<ArchiveNamespaceRequest$Outbound, z.ZodTypeDef, ArchiveNamespaceRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ArchiveNamespaceRequest$ {
    /** @deprecated use `ArchiveNamespaceRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ArchiveNamespaceRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ArchiveNamespaceRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ArchiveNamespaceRequest$Outbound, z.ZodTypeDef, ArchiveNamespaceRequest>;
    /** @deprecated use `ArchiveNamespaceRequest$Outbound` instead. */
    type Outbound = ArchiveNamespaceRequest$Outbound;
}
export declare function archiveNamespaceRequestToJSON(archiveNamespaceRequest: ArchiveNamespaceRequest): string;
export declare function archiveNamespaceRequestFromJSON(jsonString: string): SafeParseResult<ArchiveNamespaceRequest, SDKValidationError>;
//# sourceMappingURL=archivenamespace.d.ts.map
"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetWorkspaceEventsByTargetRequest$ = exports.GetWorkspaceEventsByTargetRequest$outboundSchema = exports.GetWorkspaceEventsByTargetRequest$inboundSchema = exports.GetWorkspaceEventsByTargetGlobals$ = exports.GetWorkspaceEventsByTargetGlobals$outboundSchema = exports.GetWorkspaceEventsByTargetGlobals$inboundSchema = void 0;
exports.getWorkspaceEventsByTargetGlobalsToJSON = getWorkspaceEventsByTargetGlobalsToJSON;
exports.getWorkspaceEventsByTargetGlobalsFromJSON = getWorkspaceEventsByTargetGlobalsFromJSON;
exports.getWorkspaceEventsByTargetRequestToJSON = getWorkspaceEventsByTargetRequestToJSON;
exports.getWorkspaceEventsByTargetRequestFromJSON = getWorkspaceEventsByTargetRequestFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../../lib/primitives.js");
const schemas_js_1 = require("../../../lib/schemas.js");
/** @internal */
exports.GetWorkspaceEventsByTargetGlobals$inboundSchema = z.object({
    workspace_id: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workspace_id": "workspaceId",
    });
});
/** @internal */
exports.GetWorkspaceEventsByTargetGlobals$outboundSchema = z.object({
    workspaceId: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workspaceId: "workspace_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetWorkspaceEventsByTargetGlobals$;
(function (GetWorkspaceEventsByTargetGlobals$) {
    /** @deprecated use `GetWorkspaceEventsByTargetGlobals$inboundSchema` instead. */
    GetWorkspaceEventsByTargetGlobals$.inboundSchema = exports.GetWorkspaceEventsByTargetGlobals$inboundSchema;
    /** @deprecated use `GetWorkspaceEventsByTargetGlobals$outboundSchema` instead. */
    GetWorkspaceEventsByTargetGlobals$.outboundSchema = exports.GetWorkspaceEventsByTargetGlobals$outboundSchema;
})(GetWorkspaceEventsByTargetGlobals$ || (exports.GetWorkspaceEventsByTargetGlobals$ = GetWorkspaceEventsByTargetGlobals$ = {}));
function getWorkspaceEventsByTargetGlobalsToJSON(getWorkspaceEventsByTargetGlobals) {
    return JSON.stringify(exports.GetWorkspaceEventsByTargetGlobals$outboundSchema.parse(getWorkspaceEventsByTargetGlobals));
}
function getWorkspaceEventsByTargetGlobalsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetWorkspaceEventsByTargetGlobals$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetWorkspaceEventsByTargetGlobals' from JSON`);
}
/** @internal */
exports.GetWorkspaceEventsByTargetRequest$inboundSchema = z.object({
    workspace_id: z.string().optional(),
    target_id: z.string(),
    after_created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workspace_id": "workspaceId",
        "target_id": "targetId",
        "after_created_at": "afterCreatedAt",
    });
});
/** @internal */
exports.GetWorkspaceEventsByTargetRequest$outboundSchema = z.object({
    workspaceId: z.string().optional(),
    targetId: z.string(),
    afterCreatedAt: z.date().transform(v => v.toISOString()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workspaceId: "workspace_id",
        targetId: "target_id",
        afterCreatedAt: "after_created_at",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetWorkspaceEventsByTargetRequest$;
(function (GetWorkspaceEventsByTargetRequest$) {
    /** @deprecated use `GetWorkspaceEventsByTargetRequest$inboundSchema` instead. */
    GetWorkspaceEventsByTargetRequest$.inboundSchema = exports.GetWorkspaceEventsByTargetRequest$inboundSchema;
    /** @deprecated use `GetWorkspaceEventsByTargetRequest$outboundSchema` instead. */
    GetWorkspaceEventsByTargetRequest$.outboundSchema = exports.GetWorkspaceEventsByTargetRequest$outboundSchema;
})(GetWorkspaceEventsByTargetRequest$ || (exports.GetWorkspaceEventsByTargetRequest$ = GetWorkspaceEventsByTargetRequest$ = {}));
function getWorkspaceEventsByTargetRequestToJSON(getWorkspaceEventsByTargetRequest) {
    return JSON.stringify(exports.GetWorkspaceEventsByTargetRequest$outboundSchema.parse(getWorkspaceEventsByTargetRequest));
}
function getWorkspaceEventsByTargetRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.GetWorkspaceEventsByTargetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetWorkspaceEventsByTargetRequest' from JSON`);
}
//# sourceMappingURL=getworkspaceeventsbytarget.js.map
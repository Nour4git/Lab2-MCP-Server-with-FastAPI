import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
/**
 * The publishing token to update
 */
export type UpdatePublishingTokenExpirationRequestBody = {
    /**
     * The new name for the publishing token.
     */
    tokenName?: string | undefined;
    /**
     * The new expiration date for the publishing token.
     */
    validUntil: Date;
};
export type UpdatePublishingTokenExpirationRequest = {
    /**
     * Unique identifier of the publishing token.
     */
    tokenID: string;
    /**
     * The publishing token to update
     */
    requestBody?: UpdatePublishingTokenExpirationRequestBody | undefined;
};
/** @internal */
export declare const UpdatePublishingTokenExpirationRequestBody$inboundSchema: z.ZodType<UpdatePublishingTokenExpirationRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdatePublishingTokenExpirationRequestBody$Outbound = {
    token_name?: string | undefined;
    valid_until: string;
};
/** @internal */
export declare const UpdatePublishingTokenExpirationRequestBody$outboundSchema: z.ZodType<UpdatePublishingTokenExpirationRequestBody$Outbound, z.ZodTypeDef, UpdatePublishingTokenExpirationRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdatePublishingTokenExpirationRequestBody$ {
    /** @deprecated use `UpdatePublishingTokenExpirationRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdatePublishingTokenExpirationRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdatePublishingTokenExpirationRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdatePublishingTokenExpirationRequestBody$Outbound, z.ZodTypeDef, UpdatePublishingTokenExpirationRequestBody>;
    /** @deprecated use `UpdatePublishingTokenExpirationRequestBody$Outbound` instead. */
    type Outbound = UpdatePublishingTokenExpirationRequestBody$Outbound;
}
export declare function updatePublishingTokenExpirationRequestBodyToJSON(updatePublishingTokenExpirationRequestBody: UpdatePublishingTokenExpirationRequestBody): string;
export declare function updatePublishingTokenExpirationRequestBodyFromJSON(jsonString: string): SafeParseResult<UpdatePublishingTokenExpirationRequestBody, SDKValidationError>;
/** @internal */
export declare const UpdatePublishingTokenExpirationRequest$inboundSchema: z.ZodType<UpdatePublishingTokenExpirationRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdatePublishingTokenExpirationRequest$Outbound = {
    tokenID: string;
    RequestBody?: UpdatePublishingTokenExpirationRequestBody$Outbound | undefined;
};
/** @internal */
export declare const UpdatePublishingTokenExpirationRequest$outboundSchema: z.ZodType<UpdatePublishingTokenExpirationRequest$Outbound, z.ZodTypeDef, UpdatePublishingTokenExpirationRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdatePublishingTokenExpirationRequest$ {
    /** @deprecated use `UpdatePublishingTokenExpirationRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdatePublishingTokenExpirationRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdatePublishingTokenExpirationRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdatePublishingTokenExpirationRequest$Outbound, z.ZodTypeDef, UpdatePublishingTokenExpirationRequest>;
    /** @deprecated use `UpdatePublishingTokenExpirationRequest$Outbound` instead. */
    type Outbound = UpdatePublishingTokenExpirationRequest$Outbound;
}
export declare function updatePublishingTokenExpirationRequestToJSON(updatePublishingTokenExpirationRequest: UpdatePublishingTokenExpirationRequest): string;
export declare function updatePublishingTokenExpirationRequestFromJSON(jsonString: string): SafeParseResult<UpdatePublishingTokenExpirationRequest, SDKValidationError>;
//# sourceMappingURL=updatepublishingtokenexpiration.d.ts.map
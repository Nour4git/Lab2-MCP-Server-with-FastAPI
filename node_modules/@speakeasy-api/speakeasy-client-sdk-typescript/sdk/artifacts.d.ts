import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
export declare class Artifacts extends ClientSDK {
    /**
     * Configure a new remote source
     */
    createRemoteSource(request?: shared.RemoteSource | undefined, options?: RequestOptions): Promise<void>;
    /**
     * Get blob for a particular digest
     */
    getBlob(request: operations.GetBlobRequest, options?: RequestOptions): Promise<ReadableStream<Uint8Array>>;
    /**
     * Get manifest for a particular reference
     */
    getManifest(request: operations.GetManifestRequest, options?: RequestOptions): Promise<shared.Manifest>;
    /**
     * Each namespace contains many revisions.
     */
    getNamespaces(options?: RequestOptions): Promise<shared.GetNamespacesResponse>;
    getRevisions(request: operations.GetRevisionsRequest, options?: RequestOptions): Promise<shared.GetRevisionsResponse>;
    getTags(request: operations.GetTagsRequest, options?: RequestOptions): Promise<shared.GetTagsResponse>;
    /**
     * Get remote sources attached to a particular namespace
     */
    listRemoteSources(request: operations.ListRemoteSourcesRequest, options?: RequestOptions): Promise<shared.RemoteSource>;
    /**
     * Add tags to an existing revision
     */
    postTags(request: operations.PostTagsRequest, options?: RequestOptions): Promise<void>;
    /**
     * Get access token for communicating with OCI distribution endpoints
     */
    preflight(request?: shared.PreflightRequest | undefined, options?: RequestOptions): Promise<shared.PreflightToken>;
    /**
     * Set whether a namespace is archived
     */
    setArchived(request: operations.ArchiveNamespaceRequest, options?: RequestOptions): Promise<void>;
    /**
     * Set visibility of a namespace with an existing metadata entry
     */
    setVisibility(request: operations.SetVisibilityRequest, options?: RequestOptions): Promise<void>;
}
//# sourceMappingURL=artifacts.d.ts.map
"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CodeSamples = void 0;
const codeSamplesGenerateCodeSamplePreview_js_1 = require("../funcs/codeSamplesGenerateCodeSamplePreview.js");
const codeSamplesGenerateCodeSamplePreviewAsync_js_1 = require("../funcs/codeSamplesGenerateCodeSamplePreviewAsync.js");
const codeSamplesGet_js_1 = require("../funcs/codeSamplesGet.js");
const codeSamplesGetCodeSamplePreviewAsync_js_1 = require("../funcs/codeSamplesGetCodeSamplePreviewAsync.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("./types/fp.js");
class CodeSamples extends sdks_js_1.ClientSDK {
    /**
     * Generate Code Sample previews from a file and configuration parameters.
     *
     * @remarks
     * This endpoint generates Code Sample previews from a file and configuration parameters.
     */
    async generateCodeSamplePreview(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, codeSamplesGenerateCodeSamplePreview_js_1.codeSamplesGenerateCodeSamplePreview)(this, request, options));
    }
    /**
     * Initiate asynchronous Code Sample preview generation from a file and configuration parameters, receiving an async JobID response for polling.
     *
     * @remarks
     * This endpoint generates Code Sample previews from a file and configuration parameters, receiving an async JobID response for polling.
     */
    async generateCodeSamplePreviewAsync(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, codeSamplesGenerateCodeSamplePreviewAsync_js_1.codeSamplesGenerateCodeSamplePreviewAsync)(this, request, options));
    }
    /**
     * Retrieve usage snippets
     *
     * @remarks
     * Retrieve usage snippets from an OpenAPI document stored in the registry. Supports filtering by language and operation ID.
     */
    async get(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, codeSamplesGet_js_1.codeSamplesGet)(this, request, options));
    }
    /**
     * Poll for the result of an asynchronous Code Sample preview generation.
     *
     * @remarks
     * Poll for the result of an asynchronous Code Sample preview generation.
     */
    async getCodeSamplePreviewAsync(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, codeSamplesGetCodeSamplePreviewAsync_js_1.codeSamplesGetCodeSamplePreviewAsync)(this, request, options));
    }
}
exports.CodeSamples = CodeSamples;
//# sourceMappingURL=codesamples.js.map